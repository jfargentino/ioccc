Diehard output from trannw run with f = 4 and data as follows:
908313 60000 0 1
=========================================================================
				NOTE

	Most of the tests in DIEHARD return a p-value, which
	should be uniform on [0,1) if the input file contains truly
	independent random bits.   Those p-values are obtained by
	p=1-F(X), where F is the assumed distribution of the sample
	random variable X---often normal. But that assumed F is often just
	an asymptotic approximation, for which the fit will be worst
	in the tails. Thus you should not be surprised with  occasion-
	al p-values near 0 or 1, such as .0012 or .9983. When a bit
	stream really FAILS BIG, you will get p`s of 0 or 1 to six 
	or more places.  By all means, do not, as a Statistician 
	might, think that a p < .025 or p> .975 means that the RNG
	has "failed the test at the .05 level".  Such p`s happen
	among the hundreds that DIEHARD produces, even with good RNGs.
	 So keep in mind that "p happens"

	Enter the name of the file to be tested.
	This must be a form="unformatted",access="direct" binary
	file of about 10-12 million bytes. Enter file name: 


		HERE ARE YOUR CHOICES:

		1   Birthday Spacings
		2   Overlapping Permutations
		3   Ranks of 31x31 and 32x32 matrices
		4   Ranks of 6x8 Matrices
		5   Monkey Tests on 20-bit Words
		6   Monkey Tests OPSO,OQSO,DNA
		7   Count the 1`s in a Stream of Bytes
		8   Count the 1`s in Specific Bytes
		9   Parking Lot Test
		10  Minimum Distance Test
		11  Random Spheres Test
		12  The Sqeeze Test
		13  Overlapping Sums Test
		14  Runs Test
		15  The Craps Test
		16  All of the above

	To choose any particular tests, enter corresponding numbers.
	Enter 16 for all tests. If you want to perform all but a few
	tests, enter corresponding numbers preceded by "-" sign.
	Tests are executed in the order they are entered.

	Enter your choices.

	|-------------------------------------------------------------|
	|           This is the BIRTHDAY SPACINGS TEST                |
	|Choose m birthdays in a "year" of n days.  List the spacings |
	|between the birthdays.  Let j be the number of values that   |
	|occur more than once in that list, then j is asymptotically  |
	|Poisson distributed with mean m^3/(4n).  Experience shows n  |
	|must be quite large, say n>=2^18, for comparing the results  |
	|to the Poisson distribution with that mean.  This test uses  |
	|n=2^24 and m=2^10, so that the underlying distribution for j |
	|is taken to be Poisson with lambda=2^30/(2^26)=16. A sample  |
	|of 200 j''s is taken, and a chi-square goodness of fit test  |
	|provides a p value.  The first test uses bits 1-24 (counting |
	|from the left) from integers in the specified file.  Then the|
	|file is closed and reopened, then bits 2-25 of the same inte-|
	|gers are used to provide birthdays, and so on to bits 9-32.  |
	|Each set of bits provides a p-value, and the nine p-values   |
	|provide a sample for a KSTEST.                               |
	|------------------------------------------------------------ |

		RESULTS OF BIRTHDAY SPACINGS TEST FOR trannw.bin
	(no_bdays=1024, no_days/yr=2^24, lambda=16.00, sample size=500)

	Bits used	mean		chisqr		p-value
	 1 to 24	15.75		20.1881		0.264722
	 2 to 25	15.77		11.3177		0.839580
	 3 to 26	15.99		10.6703		0.873183
	 4 to 27	15.54		23.5057		0.133500
	 5 to 28	15.73		16.1888		0.510494
	 6 to 29	15.96		12.8812		0.744101
	 7 to 30	15.77		12.5005		0.768930
	 8 to 31	15.77		11.2940		0.840879
	 9 to 32	15.84		17.1067		0.447162

			degree of freedoms is: 17
	---------------------------------------------------------------
		p-value for KStest on those 9 p-values: 0.399184


	|-------------------------------------------------------------|
	|This is the BINARY RANK TEST for 31x31 matrices. The leftmost|
	|31 bits of 31 random integers from the test sequence are used|
	|to form a 31x31 binary matrix over the field {0,1}. The rank |
	|is determined. That rank can be from 0 to 31, but ranks< 28  |
	|are rare, and their counts are pooled with those for rank 28.|
	|Ranks are found for 40,000 such random matrices and a chisqu-|
	|are test is performed on counts for ranks 31,30,28 and <=28. |
	|-------------------------------------------------------------|
		Rank test for binary matrices (31x31) from trannw.bin

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=28	211         	211.4       	0.001       	0.001       
	r=29	5064        	5134.0      	0.955       	0.956       
	r=30	23221       	23103.0     	0.602       	1.558       
	r=31	11504       	11551.5     	0.196       	1.753       

		chi-square = 1.753 with df = 3;  p-value = 0.625
	--------------------------------------------------------------

	|-------------------------------------------------------------|
	|This is the BINARY RANK TEST for 32x32 matrices. A random 32x|
	|32 binary matrix is formed, each row a 32-bit random integer.|
	|The rank is determined. That rank can be from 0 to 32, ranks |
	|less than 29 are rare, and their counts are pooled with those|
	|for rank 29.  Ranks are found for 40,000 such random matrices|
	|and a chisquare test is performed on counts for ranks  32,31,|
	|30 and <=29.                                                 |
	|-------------------------------------------------------------|
		Rank test for binary matrices (32x32) from trannw.bin

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=29	222         	211.4       	0.530       	0.530       
	r=30	5047        	5134.0      	1.475       	2.004       
	r=31	23237       	23103.0     	0.777       	2.781       
	r=32	11494       	11551.5     	0.286       	3.067       

		chi-square = 3.067 with df = 3;  p-value = 0.381
	--------------------------------------------------------------

	|-------------------------------------------------------------|
	|This is the BINARY RANK TEST for 6x8 matrices.  From each of |
	|six random 32-bit integers from the generator under test, a  |
	|specified byte is chosen, and the resulting six bytes form a |
	|6x8 binary matrix whose rank is determined.  That rank can be|
	|from 0 to 6, but ranks 0,1,2,3 are rare; their counts are    |
	|pooled with those for rank 4. Ranks are found for 100,000    |
	|random matrices, and a chi-square test is performed on       |
	|counts for ranks 6,5 and (0,...,4) (pooled together).        |
	|-------------------------------------------------------------|

		Rank test for binary matrices (6x8) from trannw.bin

			      bits  1 to  8

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	989         	944.3       	2.116       	2.116       
	r=5	21750       	21743.9     	0.002       	2.118       
	r=6	77261       	77311.8     	0.033       	2.151       

		chi-square = 2.151 with df = 2;  p-value = 0.341
	--------------------------------------------------------------

			      bits  2 to  9

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	942         	944.3       	0.006       	0.006       
	r=5	21714       	21743.9     	0.041       	0.047       
	r=6	77344       	77311.8     	0.013       	0.060       

		chi-square = 0.060 with df = 2;  p-value = 0.970
	--------------------------------------------------------------

			      bits  3 to 10

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	965         	944.3       	0.454       	0.454       
	r=5	21735       	21743.9     	0.004       	0.457       
	r=6	77300       	77311.8     	0.002       	0.459       

		chi-square = 0.459 with df = 2;  p-value = 0.795
	--------------------------------------------------------------

			      bits  4 to 11

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	980         	944.3       	1.350       	1.350       
	r=5	21804       	21743.9     	0.166       	1.516       
	r=6	77216       	77311.8     	0.119       	1.634       

		chi-square = 1.634 with df = 2;  p-value = 0.442
	--------------------------------------------------------------

			      bits  5 to 12

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	970         	944.3       	0.699       	0.699       
	r=5	21832       	21743.9     	0.357       	1.056       
	r=6	77198       	77311.8     	0.168       	1.224       

		chi-square = 1.224 with df = 2;  p-value = 0.542
	--------------------------------------------------------------

			      bits  6 to 13

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	979         	944.3       	1.275       	1.275       
	r=5	21834       	21743.9     	0.373       	1.648       
	r=6	77187       	77311.8     	0.201       	1.850       

		chi-square = 1.850 with df = 2;  p-value = 0.397
	--------------------------------------------------------------

			      bits  7 to 14

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	930         	944.3       	0.217       	0.217       
	r=5	21831       	21743.9     	0.349       	0.565       
	r=6	77239       	77311.8     	0.069       	0.634       

		chi-square = 0.634 with df = 2;  p-value = 0.728
	--------------------------------------------------------------

			      bits  8 to 15

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	945         	944.3       	0.001       	0.001       
	r=5	22028       	21743.9     	3.712       	3.712       
	r=6	77027       	77311.8     	1.049       	4.762       

		chi-square = 4.762 with df = 2;  p-value = 0.092
	--------------------------------------------------------------

			      bits  9 to 16

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	969         	944.3       	0.646       	0.646       
	r=5	21762       	21743.9     	0.015       	0.661       
	r=6	77269       	77311.8     	0.024       	0.685       

		chi-square = 0.685 with df = 2;  p-value = 0.710
	--------------------------------------------------------------

			      bits 10 to 17

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	953         	944.3       	0.080       	0.080       
	r=5	21931       	21743.9     	1.610       	1.690       
	r=6	77116       	77311.8     	0.496       	2.186       

		chi-square = 2.186 with df = 2;  p-value = 0.335
	--------------------------------------------------------------

			      bits 11 to 18

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	971         	944.3       	0.755       	0.755       
	r=5	21923       	21743.9     	1.475       	2.230       
	r=6	77106       	77311.8     	0.548       	2.778       

		chi-square = 2.778 with df = 2;  p-value = 0.249
	--------------------------------------------------------------

			      bits 12 to 19

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	939         	944.3       	0.030       	0.030       
	r=5	21957       	21743.9     	2.088       	2.118       
	r=6	77104       	77311.8     	0.559       	2.677       

		chi-square = 2.677 with df = 2;  p-value = 0.262
	--------------------------------------------------------------

			      bits 13 to 20

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	968         	944.3       	0.595       	0.595       
	r=5	21826       	21743.9     	0.310       	0.905       
	r=6	77206       	77311.8     	0.145       	1.050       

		chi-square = 1.050 with df = 2;  p-value = 0.592
	--------------------------------------------------------------

			      bits 14 to 21

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	964         	944.3       	0.411       	0.411       
	r=5	21817       	21743.9     	0.246       	0.657       
	r=6	77219       	77311.8     	0.111       	0.768       

		chi-square = 0.768 with df = 2;  p-value = 0.681
	--------------------------------------------------------------

			      bits 15 to 22

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	958         	944.3       	0.199       	0.199       
	r=5	21838       	21743.9     	0.407       	0.606       
	r=6	77204       	77311.8     	0.150       	0.756       

		chi-square = 0.756 with df = 2;  p-value = 0.685
	--------------------------------------------------------------

			      bits 16 to 23

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	958         	944.3       	0.199       	0.199       
	r=5	21654       	21743.9     	0.372       	0.570       
	r=6	77388       	77311.8     	0.075       	0.646       

		chi-square = 0.646 with df = 2;  p-value = 0.724
	--------------------------------------------------------------

			      bits 17 to 24

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	913         	944.3       	1.037       	1.037       
	r=5	21912       	21743.9     	1.300       	2.337       
	r=6	77175       	77311.8     	0.242       	2.579       

		chi-square = 2.579 with df = 2;  p-value = 0.275
	--------------------------------------------------------------

			      bits 18 to 25

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	964         	944.3       	0.411       	0.411       
	r=5	21665       	21743.9     	0.286       	0.697       
	r=6	77371       	77311.8     	0.045       	0.743       

		chi-square = 0.743 with df = 2;  p-value = 0.690
	--------------------------------------------------------------

			      bits 19 to 26

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	1003        	944.3       	3.649       	3.649       
	r=5	21602       	21743.9     	0.926       	4.575       
	r=6	77395       	77311.8     	0.090       	4.665       

		chi-square = 4.665 with df = 2;  p-value = 0.097
	--------------------------------------------------------------

			      bits 20 to 27

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	976         	944.3       	1.064       	1.064       
	r=5	21685       	21743.9     	0.160       	1.224       
	r=6	77339       	77311.8     	0.010       	1.233       

		chi-square = 1.233 with df = 2;  p-value = 0.540
	--------------------------------------------------------------

			      bits 21 to 28

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	975         	944.3       	0.998       	0.998       
	r=5	21876       	21743.9     	0.803       	1.801       
	r=6	77149       	77311.8     	0.343       	2.143       

		chi-square = 2.143 with df = 2;  p-value = 0.342
	--------------------------------------------------------------

			      bits 22 to 29

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	941         	944.3       	0.012       	0.012       
	r=5	21713       	21743.9     	0.044       	0.055       
	r=6	77346       	77311.8     	0.015       	0.071       

		chi-square = 0.071 with df = 2;  p-value = 0.965
	--------------------------------------------------------------

			      bits 23 to 30

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	950         	944.3       	0.034       	0.034       
	r=5	21570       	21743.9     	1.391       	1.425       
	r=6	77480       	77311.8     	0.366       	1.791       

		chi-square = 1.791 with df = 2;  p-value = 0.408
	--------------------------------------------------------------

			      bits 24 to 31

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	936         	944.3       	0.073       	0.073       
	r=5	21860       	21743.9     	0.620       	0.693       
	r=6	77204       	77311.8     	0.150       	0.843       

		chi-square = 0.843 with df = 2;  p-value = 0.656
	--------------------------------------------------------------

			      bits 25 to 32

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	910         	944.3       	1.246       	1.246       
	r=5	21745       	21743.9     	0.000       	1.246       
	r=6	77345       	77311.8     	0.014       	1.260       

		chi-square = 1.260 with df = 2;  p-value = 0.533
	--------------------------------------------------------------
	    TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
	    These should be 25 uniform [0,1] random variates:
 
	0.341120    	0.970383    	0.794848    	0.441646    	0.542288     
	0.396548    	0.728330    	0.092475    	0.710051    	0.335213     
	0.249327    	0.262271    	0.591674    	0.681089    	0.685126     
	0.724135    	0.275394    	0.689834    	0.097077    	0.539754     
	0.342418    	0.965329    	0.408376    	0.656005    	0.532539    
		The KS test for those 25 supposed UNI's yields
			KS p-value = 0.432429

	|-------------------------------------------------------------|
	|                  THE BITSTREAM TEST                         |
	|The file under test is viewed as a stream of bits. Call them |
	|b1,b2,... .  Consider an alphabet with two "letters", 0 and 1|
	|and think of the stream of bits as a succession of 20-letter |
	|"words", overlapping.  Thus the first word is b1b2...b20, the|
	|second is b2b3...b21, and so on.  The bitstream test counts  |
	|the number of missing 20-letter (20-bit) words in a string of|
	|2^21 overlapping 20-letter words.  There are 2^20 possible 20|
	|letter words.  For a truly random string of 2^21+19 bits, the|
	|number of missing words j should be (very close to) normally |
	|distributed with mean 141,909 and sigma 428.  Thus           |
	| (j-141909)/428 should be a standard normal variate (z score)|
	|that leads to a uniform [0,1) p value.  The test is repeated |
	|twenty times.                                                |
	|-------------------------------------------------------------|

		THE OVERLAPPING 20-TUPLES BITSTREAM  TEST for trannw.bin
	 (20 bits/word, 2097152 words 20 bitstreams. No. missing words 
	  should average 141909.33 with sigma=428.00.)
	----------------------------------------------------------------
		   BITSTREAM test results for trannw.bin.

	Bitstream	No. missing words	z-score		p-value
	   1		141773 			-0.32		0.624958
	   2		141680 			-0.54		0.703958
	   3		141486 			-0.99		0.838690
	   4		141493 			-0.97		0.834657
	   5		141336 			-1.34		0.909805
	   6		141380 			-1.24		0.891910
	   7		142366 			 1.07		0.142989
	   8		142288 			 0.88		0.188148
	   9		142029 			 0.28		0.389891
	   10		141514 			-0.92		0.822170
	   11		141930 			 0.05		0.480741
	   12		141657 			-0.59		0.722256
	   13		141234 			-1.58		0.942703
	   14		142118 			 0.49		0.312935
	   15		142050 			 0.33		0.371203
	   16		141815 			-0.22		0.587219
	   17		141994 			 0.20		0.421590
	   18		142458 			 1.28		0.099932
	   19		141017 			-2.08		0.981460
	   20		141666 			-0.57		0.715162
	----------------------------------------------------------------

	|-------------------------------------------------------------|
	|        OPSO means Overlapping-Pairs-Sparse-Occupancy        |
	|The OPSO test considers 2-letter words from an alphabet of   |
	|1024 letters.  Each letter is determined by a specified ten  |
	|bits from a 32-bit integer in the sequence to be tested. OPSO|
	|generates  2^21 (overlapping) 2-letter words  (from 2^21+1   |
	|"keystrokes")  and counts the number of missing words---that |
	|is 2-letter words which do not appear in the entire sequence.|
	|That count should be very close to normally distributed with |
	|mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should|
	|be a standard normal variable. The OPSO test takes 32 bits at|
	|a time from the test file and uses a designated set of ten   |
	|consecutive bits. It then restarts the file for the next de- |
	|signated 10 bits, and so on.                                 |
	|------------------------------------------------------------ |

			   OPSO test for file trannw.bin

	Bits used	No. missing words	z-score		p-value
	23 to 32  		141700 		-0.7218		0.764800
	22 to 31  		141634 		-0.9494		0.828795
	21 to 30  		141582 		-1.1287		0.870493
	20 to 29  		141823 		-0.2977		0.617030
	19 to 28  		142209 		 1.0333		0.150721
	18 to 27  		142033 		 0.4264		0.334891
	17 to 26  		141702 		-0.7149		0.762674
	16 to 25  		141700 		-0.7218		0.764800
	15 to 24  		142047 		 0.4747		0.317492
	14 to 23  		142440 		 1.8299		0.033633
	13 to 22  		142000 		 0.3127		0.377271
	12 to 21  		141712 		-0.6804		0.751890
	11 to 20  		142014 		 0.3609		0.359075
	10 to 19  		142389 		 1.6540		0.049060
	9 to 18  		141824 		-0.2942		0.615713
	8 to 17  		142198 		 0.9954		0.159767
	7 to 16  		142206 		 1.0230		0.153154
	6 to 15  		141583 		-1.1253		0.869764
	5 to 14  		142372 		 1.5954		0.055310
	4 to 13  		141880 		-0.1011		0.540279
	3 to 12  		141978 		 0.2368		0.406409
	2 to 11  		141623 		-0.9873		0.838263
	1 to 10  		141336 		-1.9770		0.975979
	-----------------------------------------------------------------

	|------------------------------------------------------------ |
	|    OQSO means Overlapping-Quadruples-Sparse-Occupancy       |
	|  The test OQSO is similar, except that it considers 4-letter|
	|words from an alphabet of 32 letters, each letter determined |
	|by a designated string of 5 consecutive bits from the test   |
	|file, elements of which are assumed 32-bit random integers.  |
	|The mean number of missing words in a sequence of 2^21 four- |
	|letter words,  (2^21+3 "keystrokes"), is again 141909, with  |
	|sigma = 295.  The mean is based on theory; sigma comes from  |
	|extensive simulation.                                        |
	|------------------------------------------------------------ |

			   OQSO test for file trannw.bin

	Bits used	No. missing words	z-score		p-value
	28 to 32  		141602 		-1.0418		0.851247
	27 to 31  		141993 		 0.2836		0.388348
	26 to 30  		141695 		-0.7265		0.766247
	25 to 29  		141822 		-0.2960		0.616398
	24 to 28  		141173 		-2.4960		0.993720
	23 to 27  		141892 		-0.0587		0.523423
	22 to 26  		141939 		 0.1006		0.459943
	21 to 25  		142182 		 0.9243		0.177664
	20 to 24  		141854 		-0.1876		0.574389
	19 to 23  		142365 		 1.5446		0.061216
	18 to 22  		142617 		 2.3989		0.008223
	17 to 21  		141801 		-0.3672		0.643273
	16 to 20  		142010 		 0.3413		0.366456
	15 to 19  		142437 		 1.7887		0.036831
	14 to 18  		141245 		-2.2520		0.987838
	13 to 17  		142341 		 1.4633		0.071694
	12 to 16  		142219 		 1.0497		0.146921
	11 to 15  		142087 		 0.6023		0.273497
	10 to 14  		141906 		-0.0113		0.504503
	9 to 13  		141860 		-0.1672		0.566402
	8 to 12  		142109 		 0.6768		0.249251
	7 to 11  		142022 		 0.3819		0.351256
	6 to 10  		141830 		-0.2689		0.606002
	5 to 9  		141648 		-0.8859		0.812155
	4 to 8  		141789 		-0.4079		0.658326
	3 to 7  		141609 		-1.0181		0.845677
	2 to 6  		141869 		-0.1367		0.554371
	1 to 5  		142223 		 1.0633		0.143826
	-----------------------------------------------------------------

	|------------------------------------------------------------ |
	|    The DNA test considers an alphabet of 4 letters: C,G,A,T,|
	|determined by two designated bits in the sequence of random  |
	|integers being tested.  It considers 10-letter words, so that|
	|as in OPSO and OQSO, there are 2^20 possible words, and the  |
	|mean number of missing words from a string of 2^21  (over-   |
	|lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.  |
	|The standard deviation sigma=339 was determined as for OQSO  |
	|by simulation.  (Sigma for OPSO, 290, is the true value (to  |
	|three places), not determined by simulation.                 |
	|------------------------------------------------------------ |

			   DNA test for file trannw.bin

	Bits used	No. missing words	z-score		p-value
	31 to 32  		141872 		-0.1101		0.543842
	30 to 31  		142361 		 1.3324		0.091371
	29 to 30  		142275 		 1.0787		0.140367
	28 to 29  		141647 		-0.7738		0.780486
	27 to 28  		142268 		 1.0580		0.145022
	26 to 27  		141990 		 0.2380		0.405954
	25 to 26  		141989 		 0.2350		0.407099
	24 to 25  		142183 		 0.8073		0.209751
	23 to 24  		141684 		-0.6647		0.746876
	22 to 23  		141997 		 0.2586		0.397967
	21 to 22  		142194 		 0.8397		0.200529
	20 to 21  		141787 		-0.3609		0.640896
	19 to 20  		142007 		 0.2881		0.386630
	18 to 19  		141851 		-0.1721		0.568307
	17 to 18  		142172 		 0.7748		0.219218
	16 to 17  		142141 		 0.6834		0.247179
	15 to 16  		141719 		-0.5614		0.712753
	14 to 15  		142050 		 0.4150		0.339087
	13 to 14  		141978 		 0.2026		0.419737
	12 to 13  		141838 		-0.2104		0.583327
	11 to 12  		142127 		 0.6421		0.260406
	10 to 11  		142173 		 0.7778		0.218347
	9 to 10  		142096 		 0.5506		0.290937
	8 to 9  		141662 		-0.7296		0.767179
	7 to 8  		142218 		 0.9105		0.181271
	6 to 7  		141367 		-1.5998		0.945178
	5 to 6  		142350 		 1.2999		0.096816
	4 to 5  		141483 		-1.2576		0.895734
	3 to 4  		141984 		 0.2203		0.412832
	2 to 3  		142493 		 1.7217		0.042558
	1 to 2  		141927 		 0.0521		0.479215
	-----------------------------------------------------------------

	|-------------------------------------------------------------|
	|    This is the COUNT-THE-1''s TEST on a stream of bytes.    |
	|Consider the file under test as a stream of bytes (four per  |
	|32 bit integer).  Each byte can contain from 0 to 8 1''s,    |
	|with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let |
	|the stream of bytes provide a string of overlapping  5-letter|
	|words, each "letter" taking values A,B,C,D,E. The letters are|
	|determined by the number of 1''s in a byte: 0,1,or 2 yield A,|
	|3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus|
	|we have a monkey at a typewriter hitting five keys with vari-|
	|ous probabilities (37,56,70,56,37 over 256).  There are 5^5  |
	|possible 5-letter words, and from a string of 256,000 (over- |
	|lapping) 5-letter words, counts are made on the frequencies  |
	|for each word.   The quadratic form in the weak inverse of   |
	|the covariance matrix of the cell counts provides a chisquare|
	|test: Q5-Q4, the difference of the naive Pearson sums of     |
	|(OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.   |
	|-------------------------------------------------------------|

		Test result for the byte stream from trannw.bin
	  (Degrees of freedom: 5^4-5^3=2500; sample size: 2560000)

			chisquare	z-score		p-value
			2420.93		-1.118		0.868268

	|-------------------------------------------------------------|
	|    This is the COUNT-THE-1''s TEST for specific bytes.      |
	|Consider the file under test as a stream of 32-bit integers. |
	|From each integer, a specific byte is chosen , say the left- |
	|most: bits 1 to 8. Each byte can contain from 0 to 8 1''s,   |
	|with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let  |
	|the specified bytes from successive integers provide a string|
	|of (overlapping) 5-letter words, each "letter" taking values |
	|A,B,C,D,E. The letters are determined  by the number of 1''s,|
	|in that byte: 0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D, |
	|and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter |
	|hitting five keys with with various probabilities: 37,56,70, |
	|56,37 over 256. There are 5^5 possible 5-letter words, and   |
	|from a string of 256,000 (overlapping) 5-letter words, counts|
	|are made on the frequencies for each word. The quadratic form|
	|in the weak inverse of the covariance matrix of the cell     |
	|counts provides a chisquare test: Q5-Q4, the difference of   |
	|the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-  |
	|and 4-letter cell  counts.                                   |
	|-------------------------------------------------------------|

		Test results for specific bytes from trannw.bin
	  (Degrees of freedom: 5^4-5^3=2500; sample size: 256000)

	bits used	chisquare	z-score		p-value
	1 to 8  	2436.65		-0.896		0.814830
	2 to 9  	2565.80		 0.931		0.176038
	3 to 10  	2517.45		 0.247		0.402561
	4 to 11  	2408.65		-1.292		0.901806
	5 to 12  	2356.50		-2.029		0.978791
	6 to 13  	2535.09		 0.496		0.309872
	7 to 14  	2340.13		-2.261		0.988118
	8 to 15  	2574.22		 1.050		0.146931
	9 to 16  	2576.27		 1.079		0.140378
	10 to 17  	2468.24		-0.449		0.673340
	11 to 18  	2490.30		-0.137		0.554571
	12 to 19  	2472.22		-0.393		0.652796
	13 to 20  	2526.37		 0.373		0.354625
	14 to 21  	2372.24		-1.807		0.964603
	15 to 22  	2530.08		 0.425		0.335261
	16 to 23  	2411.79		-1.248		0.893893
	17 to 24  	2533.24		 0.470		0.319135
	18 to 25  	2499.91		-0.001		0.500491
	19 to 26  	2396.31		-1.466		0.928730
	20 to 27  	2642.61		 2.017		0.021861
	21 to 28  	2481.99		-0.255		0.600535
	22 to 29  	2640.27		 1.984		0.023643
	23 to 30  	2574.93		 1.060		0.144661
	24 to 31  	2375.35		-1.763		0.961030
	25 to 32  	2476.19		-0.337		0.631853
	|-------------------------------------------------------------|
	|              THIS IS A PARKING LOT TEST                     |
	|In a square of side 100, randomly "park" a car---a circle of |
	|radius 1.   Then try to park a 2nd, a 3rd, and so on, each   |
	|time parking "by ear".  That is, if an attempt to park a car |
	|causes a crash with one already parked, try again at a new   |
	|random location. (To avoid path problems, consider parking   |
	|helicopters rather than cars.)   Each attempt leads to either|
	|a crash or a success, the latter followed by an increment to |
	|the list of cars already parked. If we plot n: the number of |
	|attempts, versus k: the number successfully parked, we get a |
	|curve that should be similar to those provided by a perfect  |
	|random number generator.  Theory for the behavior of such a  |
	|random curve seems beyond reach, and as graphics displays are|
	|not available for this battery of tests, a simple characteriz|
	|ation of the random experiment is used: k, the number of cars|
	|successfully parked after n=12,000 attempts. Simulation shows|
	|that k should average 3523 with sigma 21.9 and is very close |
	|to normally distributed.  Thus (k-3523)/21.9 should be a st- |
	|andard normal variable, which, converted to a uniform varia- |
	|ble, provides input to a KSTEST based on a sample of 10.     |
	|-------------------------------------------------------------|

		CDPARK: result of 10 tests on file trannw.bin
	  (Of 12000 tries, the average no. of successes should be 
	   3523.0 with sigma=21.9)

	   No. succeses		z-score		p-value
		3513		-0.4566		0.676028
		3500		-1.0502		0.853193
		3543		 0.9132		0.180558
		3499		-1.0959		0.863437
		3512		-0.5023		0.692266
		3527		 0.1826		0.427537
		3543		 0.9132		0.180558
		3578		 2.5114		0.006012
		3509		-0.6393		0.738676
		3543		 0.9132		0.180558
	  Square side=100, avg. no. parked=3526.70 sample std.=23.72
	     p-value of the KSTEST for those 10 p-values: 0.098852


	|-------------------------------------------------------------|
	|              THE MINIMUM DISTANCE TEST                      |
	|It does this 100 times:  choose n=8000 random points in a    |
	|square of side 10000.  Find d, the minimum distance between  |
	|the (n^2-n)/2 pairs of points.  If the points are truly inde-|
	|pendent uniform, then d^2, the square of the minimum distance|
	|should be (very close to) exponentially distributed with mean|
	|.995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and |
	|a KSTEST on the resulting 100 values serves as a test of uni-|
	|formity for random points in the square. Test numbers=0 mod 5|
	|are printed but the KSTEST is based on the full set of 100   |
	|random choices of 8000 points in the 10000x10000 square.     |
	|-------------------------------------------------------------|

		This is the MINIMUM DISTANCE test for file trannw.bin

	Sample no.	 d^2		 mean		equiv uni
	   5		0.4823		6.6777		0.384119
	   10		2.9635		4.0860		0.949124
	   15		3.1155		3.3440		0.956335
	   20		0.0551		2.6057		0.053864
	   25		0.1551		2.2396		0.144322
	   30		0.4557		2.0376		0.367420
	   35		2.4599		1.8968		0.915609
	   40		3.4139		1.8248		0.967646
	   45		2.3659		1.6969		0.907245
	   50		1.3493		1.5680		0.742327
	   55		3.0727		1.5489		0.954415
	   60		0.4773		1.4703		0.381054
	   65		0.5535		1.4913		0.426674
	   70		1.3207		1.4612		0.734821
	   75		0.5216		1.4241		0.408011
	   80		1.3648		1.3924		0.746309
	   85		0.5300		1.3255		0.412942
	   90		1.6149		1.2870		0.802698
	   95		1.8834		1.3082		0.849354
	   100		1.5486		1.2760		0.789112
	--------------------------------------------------------------
	Result of KS test on 100 transformed mindist^2's: p-value=0.170790


				NOTE

	Most of the tests in DIEHARD return a p-value, which
	should be uniform on [0,1) if the input file contains truly
	independent random bits.   Those p-values are obtained by
	p=1-F(X), where F is the assumed distribution of the sample
	random variable X---often normal. But that assumed F is often just
	an asymptotic approximation, for which the fit will be worst
	in the tails. Thus you should not be surprised with  occasion-
	al p-values near 0 or 1, such as .0012 or .9983. When a bit
	stream really FAILS BIG, you will get p`s of 0 or 1 to six 
	or more places.  By all means, do not, as a Statistician 
	might, think that a p < .025 or p> .975 means that the RNG
	has "failed the test at the .05 level".  Such p`s happen
	among the hundreds that DIEHARD produces, even with good RNGs.
	 So keep in mind that "p happens"

	Enter the name of the file to be tested.
	This must be a form="unformatted",access="direct" binary
	file of about 10-12 million bytes. Enter file name: 


		HERE ARE YOUR CHOICES:

		1   Birthday Spacings
		2   Overlapping Permutations
		3   Ranks of 31x31 and 32x32 matrices
		4   Ranks of 6x8 Matrices
		5   Monkey Tests on 20-bit Words
		6   Monkey Tests OPSO,OQSO,DNA
		7   Count the 1`s in a Stream of Bytes
		8   Count the 1`s in Specific Bytes
		9   Parking Lot Test
		10  Minimum Distance Test
		11  Random Spheres Test
		12  The Sqeeze Test
		13  Overlapping Sums Test
		14  Runs Test
		15  The Craps Test
		16  All of the above

	To choose any particular tests, enter corresponding numbers.
	Enter 16 for all tests. If you want to perform all but a few
	tests, enter corresponding numbers preceded by "-" sign.
	Tests are executed in the order they are entered.

	Enter your choices.

	|-------------------------------------------------------------|
	|             THE 3DSPHERES TEST                              |
	|Choose  4000 random points in a cube of edge 1000.  At each  |
	|point, center a sphere large enough to reach the next closest|
	|point. Then the volume of the smallest such sphere is (very  |
	|close to) exponentially distributed with mean 120pi/3.  Thus |
	|the radius cubed is exponential with mean 30. (The mean is   |
	|obtained by extensive simulation).  The 3DSPHERES test gener-|
	|ates 4000 such spheres 20 times.  Each min radius cubed leads|
	|to a uniform variable by means of 1-exp(-r^3/30.), then a    |
	| KSTEST is done on the 20 p-values.                          |
	|-------------------------------------------------------------|

		    The 3DSPHERES test for file trannw.bin

		sample no	r^3		equiv. uni.
		   1		19.446		0.477017
		   2		12.108		0.332099
		   3		13.006		0.351787
		   4		14.822		0.389864
		   5		109.672		0.974158
		   6		156.161		0.994513
		   7		11.053		0.308189
		   8		7.444		0.219750
		   9		33.196		0.669299
		   10		29.121		0.621179
		   11		0.577		0.019039
		   12		85.531		0.942215
		   13		48.525		0.801608
		   14		14.638		0.386111
		   15		3.136		0.099263
		   16		19.642		0.480421
		   17		34.766		0.686155
		   18		4.162		0.129540
		   19		0.430		0.014236
		   20		4.634		0.143133
	--------------------------------------------------------------
		p-value for KS test on those 20 p-values: 0.532040


	|-------------------------------------------------------------|
	|                 This is the SQUEEZE test                    |
	| Random integers are floated to get uniforms on [0,1). Start-|
	| ing with k=2^31=2147483647, the test finds j, the number of |
	| iterations necessary to reduce k to 1, using the reduction  |
	| k=ceiling(k*U), with U provided by floating integers from   |
	| the file being tested.  Such j''s are found 100,000 times,  |
	| then counts for the number of times j was <=6,7,...,47,>=48 |
	| are used to provide a chi-square test for cell frequencies. |
	|-------------------------------------------------------------|

			RESULTS OF SQUEEZE TEST FOR trannw.bin

		    Table of standardized frequency counts
		(obs-exp)^2/exp  for j=(1,..,6), 7,...,47,(48,...)
		 1.3  	-0.7  	-0.4  	-0.8  	-0.6  	 0.0  
		 0.1  	-1.0  	-0.1  	-0.9  	 1.8  	-0.8  
		-0.2  	-0.3  	-0.4  	-0.8  	-0.8  	 0.3  
		 0.4  	-0.4  	 0.2  	 1.6  	 0.0  	-0.4  
		 1.1  	 1.8  	 0.7  	-1.1  	-0.4  	 0.5  
		 0.5  	-0.4  	-2.1  	-0.8  	-0.6  	 0.6  
		-0.7  	 0.2  	 0.5  	 0.4  	 0.1  	 1.0  
		-1.1  
		Chi-square with 42 degrees of freedom:29.884237
		z-score=-1.321938, p-value=0.919426
	_____________________________________________________________


	|-------------------------------------------------------------|
	|    This is the RUNS test.  It counts runs up, and runs down,|
	|in a sequence of uniform [0,1) variables, obtained by float- |
	|ing the 32-bit integers in the specified file. This example  |
	|shows how runs are counted: .123,.357,.789,.425,.224,.416,.95|
	|contains an up-run of length 3, a down-run of length 2 and an|
	|up-run of (at least) 2, depending on the next values.  The   |
	|covariance matrices for the runs-up and runs-down are well   |
	|known, leading to chisquare tests for quadratic forms in the |
	|weak inverses of the covariance matrices.  Runs are counted  |
	|for sequences of length 10,000.  This is done ten times. Then|
	|another three sets of ten.                                   |
	|-------------------------------------------------------------|

			The RUNS test for file trannw.bin
		(Up and down runs in a sequence of 10000 numbers)
				Set 1
		 runs up; ks test for 10 p's: 0.152276
		 runs down; ks test for 10 p's: 0.539793
				Set 2
		 runs up; ks test for 10 p's: 0.068941
		 runs down; ks test for 10 p's: 0.733370

	|-------------------------------------------------------------|
	|This the CRAPS TEST.  It plays 200,000 games of craps, counts|
	|the number of wins and the number of throws necessary to end |
	|each game.  The number of wins should be (very close to) a   |
	|normal with mean 200000p and variance 200000p(1-p), and      |
	|p=244/495.  Throws necessary to complete the game can vary   |
	|from 1 to infinity, but counts for all>21 are lumped with 21.|
	|A chi-square test is made on the no.-of-throws cell counts.  |
	|Each 32-bit integer from the test file provides the value for|
	|the throw of a die, by floating to [0,1), multiplying by 6   |
	|and taking 1 plus the integer part of the result.            |
	|-------------------------------------------------------------|

		RESULTS OF CRAPS TEST FOR trannw.bin 
	No. of wins:  Observed	Expected
	                 98170        98585.858586
		z-score=-1.860, pvalue=0.96855

	Analysis of Throws-per-Game:

	Throws	Observed	Expected	Chisq	 Sum of (O-E)^2/E
	1	66475		66666.7		0.551		0.551
	2	37537		37654.3		0.366		0.917
	3	27160		26954.7		1.563		2.480
	4	19438		19313.5		0.803		3.283
	5	13847		13851.4		0.001		3.284
	6	9849		9943.5		0.899		4.183
	7	7134		7145.0		0.017		4.200
	8	5225		5139.1		1.437		5.637
	9	3658		3699.9		0.474		6.111
	10	2701		2666.3		0.452		6.562
	11	1910		1923.3		0.092		6.655
	12	1438		1388.7		1.747		8.402
	13	1024		1003.7		0.410		8.812
	14	708		726.1		0.453		9.265
	15	546		525.8		0.773		10.038
	16	360		381.2		1.174		11.212
	17	257		276.5		1.381		12.593
	18	199		200.8		0.017		12.609
	19	151		146.0		0.172		12.782
	20	115		106.2		0.727		13.508
	21	268		287.1		1.272		14.781

	Chisq=  14.78 for 20 degrees of freedom, p= 0.78882

		SUMMARY of craptest on trannw.bin
	 p-value for no. of wins: 0.968555
	 p-value for throws/game: 0.788820
	_____________________________________________________________

