Diehard output from tranut run testing high 32 bits with data:
583149 20000
==========================================================================
				NOTE

	Most of the tests in DIEHARD return a p-value, which
	should be uniform on [0,1) if the input file contains truly
	independent random bits.   Those p-values are obtained by
	p=1-F(X), where F is the assumed distribution of the sample
	random variable X---often normal. But that assumed F is often just
	an asymptotic approximation, for which the fit will be worst
	in the tails. Thus you should not be surprised with  occasion-
	al p-values near 0 or 1, such as .0012 or .9983. When a bit
	stream really FAILS BIG, you will get p`s of 0 or 1 to six 
	or more places.  By all means, do not, as a Statistician 
	might, think that a p < .025 or p> .975 means that the RNG
	has "failed the test at the .05 level".  Such p`s happen
	among the hundreds that DIEHARD produces, even with good RNGs.
	 So keep in mind that "p happens"

	Enter the name of the file to be tested.
	This must be a form="unformatted",access="direct" binary
	file of about 10-12 million bytes. Enter file name: 


		HERE ARE YOUR CHOICES:

		1   Birthday Spacings
		2   Overlapping Permutations
		3   Ranks of 31x31 and 32x32 matrices
		4   Ranks of 6x8 Matrices
		5   Monkey Tests on 20-bit Words
		6   Monkey Tests OPSO,OQSO,DNA
		7   Count the 1`s in a Stream of Bytes
		8   Count the 1`s in Specific Bytes
		9   Parking Lot Test
		10  Minimum Distance Test
		11  Random Spheres Test
		12  The Sqeeze Test
		13  Overlapping Sums Test
		14  Runs Test
		15  The Craps Test
		16  All of the above

	To choose any particular tests, enter corresponding numbers.
	Enter 16 for all tests. If you want to perform all but a few
	tests, enter corresponding numbers preceded by "-" sign.
	Tests are executed in the order they are entered.

	Enter your choices.

	|-------------------------------------------------------------|
	|           This is the BIRTHDAY SPACINGS TEST                |
	|Choose m birthdays in a "year" of n days.  List the spacings |
	|between the birthdays.  Let j be the number of values that   |
	|occur more than once in that list, then j is asymptotically  |
	|Poisson distributed with mean m^3/(4n).  Experience shows n  |
	|must be quite large, say n>=2^18, for comparing the results  |
	|to the Poisson distribution with that mean.  This test uses  |
	|n=2^24 and m=2^10, so that the underlying distribution for j |
	|is taken to be Poisson with lambda=2^30/(2^26)=16. A sample  |
	|of 200 j''s is taken, and a chi-square goodness of fit test  |
	|provides a p value.  The first test uses bits 1-24 (counting |
	|from the left) from integers in the specified file.  Then the|
	|file is closed and reopened, then bits 2-25 of the same inte-|
	|gers are used to provide birthdays, and so on to bits 9-32.  |
	|Each set of bits provides a p-value, and the nine p-values   |
	|provide a sample for a KSTEST.                               |
	|------------------------------------------------------------ |

		RESULTS OF BIRTHDAY SPACINGS TEST FOR tranut.bin
	(no_bdays=1024, no_days/yr=2^24, lambda=16.00, sample size=500)

	Bits used	mean		chisqr		p-value
	 1 to 24	15.79		6.8724		0.985142
	 2 to 25	15.65		21.6411		0.198917
	 3 to 26	15.67		16.0510		0.520225
	 4 to 27	15.90		20.1680		0.265728
	 5 to 28	15.67		17.5226		0.419538
	 6 to 29	15.61		18.9465		0.331612
	 7 to 30	15.63		32.4413		0.013256
	 8 to 31	15.81		13.7798		0.682625
	 9 to 32	15.66		13.7588		0.684093

			degree of freedoms is: 17
	---------------------------------------------------------------
		p-value for KStest on those 9 p-values: 0.817217


	|-------------------------------------------------------------|
	|This is the BINARY RANK TEST for 31x31 matrices. The leftmost|
	|31 bits of 31 random integers from the test sequence are used|
	|to form a 31x31 binary matrix over the field {0,1}. The rank |
	|is determined. That rank can be from 0 to 31, but ranks< 28  |
	|are rare, and their counts are pooled with those for rank 28.|
	|Ranks are found for 40,000 such random matrices and a chisqu-|
	|are test is performed on counts for ranks 31,30,28 and <=28. |
	|-------------------------------------------------------------|
		Rank test for binary matrices (31x31) from tranut.bin

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=28	218         	211.4       	0.205       	0.205       
	r=29	5021        	5134.0      	2.488       	2.693       
	r=30	23274       	23103.0     	1.265       	3.957       
	r=31	11487       	11551.5     	0.360       	4.318       

		chi-square = 4.318 with df = 3;  p-value = 0.229
	--------------------------------------------------------------

	|-------------------------------------------------------------|
	|This is the BINARY RANK TEST for 32x32 matrices. A random 32x|
	|32 binary matrix is formed, each row a 32-bit random integer.|
	|The rank is determined. That rank can be from 0 to 32, ranks |
	|less than 29 are rare, and their counts are pooled with those|
	|for rank 29.  Ranks are found for 40,000 such random matrices|
	|and a chisquare test is performed on counts for ranks  32,31,|
	|30 and <=29.                                                 |
	|-------------------------------------------------------------|
		Rank test for binary matrices (32x32) from tranut.bin

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=29	226         	211.4       	1.006       	1.006       
	r=30	5231        	5134.0      	1.832       	2.838       
	r=31	23205       	23103.0     	0.450       	3.288       
	r=32	11338       	11551.5     	3.947       	7.235       

		chi-square = 7.235 with df = 3;  p-value = 0.065
	--------------------------------------------------------------

	|-------------------------------------------------------------|
	|This is the BINARY RANK TEST for 6x8 matrices.  From each of |
	|six random 32-bit integers from the generator under test, a  |
	|specified byte is chosen, and the resulting six bytes form a |
	|6x8 binary matrix whose rank is determined.  That rank can be|
	|from 0 to 6, but ranks 0,1,2,3 are rare; their counts are    |
	|pooled with those for rank 4. Ranks are found for 100,000    |
	|random matrices, and a chi-square test is performed on       |
	|counts for ranks 6,5 and (0,...,4) (pooled together).        |
	|-------------------------------------------------------------|

		Rank test for binary matrices (6x8) from tranut.bin

			      bits  1 to  8

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	950         	944.3       	0.034       	0.034       
	r=5	21439       	21743.9     	4.275       	4.310       
	r=6	77611       	77311.8     	1.158       	5.468       

		chi-square = 5.468 with df = 2;  p-value = 0.065
	--------------------------------------------------------------

			      bits  2 to  9

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	905         	944.3       	1.636       	1.636       
	r=5	21614       	21743.9     	0.776       	2.412       
	r=6	77481       	77311.8     	0.370       	2.782       

		chi-square = 2.782 with df = 2;  p-value = 0.249
	--------------------------------------------------------------

			      bits  3 to 10

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	958         	944.3       	0.199       	0.199       
	r=5	21926       	21743.9     	1.525       	1.724       
	r=6	77116       	77311.8     	0.496       	2.220       

		chi-square = 2.220 with df = 2;  p-value = 0.330
	--------------------------------------------------------------

			      bits  4 to 11

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	898         	944.3       	2.270       	2.270       
	r=5	21971       	21743.9     	2.372       	4.642       
	r=6	77131       	77311.8     	0.423       	5.065       

		chi-square = 5.065 with df = 2;  p-value = 0.079
	--------------------------------------------------------------

			      bits  5 to 12

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	936         	944.3       	0.073       	0.073       
	r=5	21563       	21743.9     	1.505       	1.578       
	r=6	77501       	77311.8     	0.463       	2.041       

		chi-square = 2.041 with df = 2;  p-value = 0.360
	--------------------------------------------------------------

			      bits  6 to 13

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	899         	944.3       	2.173       	2.173       
	r=5	21685       	21743.9     	0.160       	2.333       
	r=6	77416       	77311.8     	0.140       	2.473       

		chi-square = 2.473 with df = 2;  p-value = 0.290
	--------------------------------------------------------------

			      bits  7 to 14

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	916         	944.3       	0.848       	0.848       
	r=5	21570       	21743.9     	1.391       	2.239       
	r=6	77514       	77311.8     	0.529       	2.768       

		chi-square = 2.768 with df = 2;  p-value = 0.251
	--------------------------------------------------------------

			      bits  8 to 15

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	897         	944.3       	2.369       	2.369       
	r=5	21709       	21743.9     	0.056       	2.425       
	r=6	77394       	77311.8     	0.087       	2.513       

		chi-square = 2.513 with df = 2;  p-value = 0.285
	--------------------------------------------------------------

			      bits  9 to 16

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	856         	944.3       	8.257       	8.257       
	r=5	21761       	21743.9     	0.013       	8.270       
	r=6	77383       	77311.8     	0.066       	8.336       

		chi-square = 8.336 with df = 2;  p-value = 0.015
	--------------------------------------------------------------

			      bits 10 to 17

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	920         	944.3       	0.625       	0.625       
	r=5	21715       	21743.9     	0.038       	0.664       
	r=6	77365       	77311.8     	0.037       	0.700       

		chi-square = 0.700 with df = 2;  p-value = 0.705
	--------------------------------------------------------------

			      bits 11 to 18

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	919         	944.3       	0.678       	0.678       
	r=5	21744       	21743.9     	0.000       	0.678       
	r=6	77337       	77311.8     	0.008       	0.686       

		chi-square = 0.686 with df = 2;  p-value = 0.710
	--------------------------------------------------------------

			      bits 12 to 19

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	969         	944.3       	0.646       	0.646       
	r=5	21712       	21743.9     	0.047       	0.693       
	r=6	77319       	77311.8     	0.001       	0.694       

		chi-square = 0.694 with df = 2;  p-value = 0.707
	--------------------------------------------------------------

			      bits 13 to 20

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	916         	944.3       	0.848       	0.848       
	r=5	21650       	21743.9     	0.406       	1.254       
	r=6	77434       	77311.8     	0.193       	1.447       

		chi-square = 1.447 with df = 2;  p-value = 0.485
	--------------------------------------------------------------

			      bits 14 to 21

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	950         	944.3       	0.034       	0.034       
	r=5	21866       	21743.9     	0.686       	0.720       
	r=6	77184       	77311.8     	0.211       	0.931       

		chi-square = 0.931 with df = 2;  p-value = 0.628
	--------------------------------------------------------------

			      bits 15 to 22

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	931         	944.3       	0.187       	0.187       
	r=5	21815       	21743.9     	0.232       	0.420       
	r=6	77254       	77311.8     	0.043       	0.463       

		chi-square = 0.463 with df = 2;  p-value = 0.793
	--------------------------------------------------------------

			      bits 16 to 23

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	990         	944.3       	2.212       	2.212       
	r=5	21827       	21743.9     	0.318       	2.529       
	r=6	77183       	77311.8     	0.215       	2.744       

		chi-square = 2.744 with df = 2;  p-value = 0.254
	--------------------------------------------------------------

			      bits 17 to 24

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	927         	944.3       	0.317       	0.317       
	r=5	21901       	21743.9     	1.135       	1.452       
	r=6	77172       	77311.8     	0.253       	1.705       

		chi-square = 1.705 with df = 2;  p-value = 0.426
	--------------------------------------------------------------

			      bits 18 to 25

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	922         	944.3       	0.527       	0.527       
	r=5	21926       	21743.9     	1.525       	2.052       
	r=6	77152       	77311.8     	0.330       	2.382       

		chi-square = 2.382 with df = 2;  p-value = 0.304
	--------------------------------------------------------------

			      bits 19 to 26

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	942         	944.3       	0.006       	0.006       
	r=5	21834       	21743.9     	0.373       	0.379       
	r=6	77224       	77311.8     	0.100       	0.479       

		chi-square = 0.479 with df = 2;  p-value = 0.787
	--------------------------------------------------------------

			      bits 20 to 27

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	944         	944.3       	0.000       	0.000       
	r=5	21618       	21743.9     	0.729       	0.729       
	r=6	77438       	77311.8     	0.206       	0.935       

		chi-square = 0.935 with df = 2;  p-value = 0.627
	--------------------------------------------------------------

			      bits 21 to 28

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	915         	944.3       	0.909       	0.909       
	r=5	21674       	21743.9     	0.225       	1.134       
	r=6	77411       	77311.8     	0.127       	1.261       

		chi-square = 1.261 with df = 2;  p-value = 0.532
	--------------------------------------------------------------

			      bits 22 to 29

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	942         	944.3       	0.006       	0.006       
	r=5	21838       	21743.9     	0.407       	0.413       
	r=6	77220       	77311.8     	0.109       	0.522       

		chi-square = 0.522 with df = 2;  p-value = 0.770
	--------------------------------------------------------------

			      bits 23 to 30

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	996         	944.3       	2.831       	2.831       
	r=5	21823       	21743.9     	0.288       	3.118       
	r=6	77181       	77311.8     	0.221       	3.340       

		chi-square = 3.340 with df = 2;  p-value = 0.188
	--------------------------------------------------------------

			      bits 24 to 31

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	958         	944.3       	0.199       	0.199       
	r=5	21717       	21743.9     	0.033       	0.232       
	r=6	77325       	77311.8     	0.002       	0.234       

		chi-square = 0.234 with df = 2;  p-value = 0.889
	--------------------------------------------------------------

			      bits 25 to 32

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	957         	944.3       	0.171       	0.171       
	r=5	21844       	21743.9     	0.461       	0.632       
	r=6	77199       	77311.8     	0.165       	0.796       

		chi-square = 0.796 with df = 2;  p-value = 0.672
	--------------------------------------------------------------
	    TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
	    These should be 25 uniform [0,1] random variates:
 
	0.064968    	0.248835    	0.329610    	0.079466    	0.360418     
	0.290381    	0.250605    	0.284695    	0.015485    	0.704568     
	0.709617    	0.706966    	0.485104    	0.627726    	0.793333     
	0.253619    	0.426393    	0.303922    	0.787155    	0.626543     
	0.532293    	0.770344    	0.188285    	0.889455    	0.671594    
		The KS test for those 25 supposed UNI's yields
			KS p-value = 0.486871

	|-------------------------------------------------------------|
	|                  THE BITSTREAM TEST                         |
	|The file under test is viewed as a stream of bits. Call them |
	|b1,b2,... .  Consider an alphabet with two "letters", 0 and 1|
	|and think of the stream of bits as a succession of 20-letter |
	|"words", overlapping.  Thus the first word is b1b2...b20, the|
	|second is b2b3...b21, and so on.  The bitstream test counts  |
	|the number of missing 20-letter (20-bit) words in a string of|
	|2^21 overlapping 20-letter words.  There are 2^20 possible 20|
	|letter words.  For a truly random string of 2^21+19 bits, the|
	|number of missing words j should be (very close to) normally |
	|distributed with mean 141,909 and sigma 428.  Thus           |
	| (j-141909)/428 should be a standard normal variate (z score)|
	|that leads to a uniform [0,1) p value.  The test is repeated |
	|twenty times.                                                |
	|-------------------------------------------------------------|

		THE OVERLAPPING 20-TUPLES BITSTREAM  TEST for tranut.bin
	 (20 bits/word, 2097152 words 20 bitstreams. No. missing words 
	  should average 141909.33 with sigma=428.00.)
	----------------------------------------------------------------
		   BITSTREAM test results for tranut.bin.

	Bitstream	No. missing words	z-score		p-value
	   1		141546 			-0.85		0.802032
	   2		141736 			-0.40		0.657253
	   3		141314 			-1.39		0.917881
	   4		142154 			 0.57		0.283777
	   5		142250 			 0.80		0.213028
	   6		141532 			-0.88		0.811007
	   7		141181 			-1.70		0.955595
	   8		142104 			 0.45		0.324613
	   9		141542 			-0.86		0.804622
	   10		141371 			-1.26		0.895764
	   11		142300 			 0.91		0.180679
	   12		141543 			-0.86		0.803977
	   13		141949 			 0.09		0.463076
	   14		142383 			 1.11		0.134211
	   15		141630 			-0.65		0.743006
	   16		141342 			-1.33		0.907503
	   17		142189 			 0.65		0.256738
	   18		142280 			 0.87		0.193231
	   19		142174 			 0.62		0.268160
	   20		141692 			-0.51		0.694196
	----------------------------------------------------------------

	|-------------------------------------------------------------|
	|        OPSO means Overlapping-Pairs-Sparse-Occupancy        |
	|The OPSO test considers 2-letter words from an alphabet of   |
	|1024 letters.  Each letter is determined by a specified ten  |
	|bits from a 32-bit integer in the sequence to be tested. OPSO|
	|generates  2^21 (overlapping) 2-letter words  (from 2^21+1   |
	|"keystrokes")  and counts the number of missing words---that |
	|is 2-letter words which do not appear in the entire sequence.|
	|That count should be very close to normally distributed with |
	|mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should|
	|be a standard normal variable. The OPSO test takes 32 bits at|
	|a time from the test file and uses a designated set of ten   |
	|consecutive bits. It then restarts the file for the next de- |
	|signated 10 bits, and so on.                                 |
	|------------------------------------------------------------ |

			   OPSO test for file tranut.bin

	Bits used	No. missing words	z-score		p-value
	23 to 32  		141695 		-0.7391		0.770067
	22 to 31  		141547 		-1.2494		0.894243
	21 to 30  		142246 		 1.1609		0.122835
	20 to 29  		141749 		-0.5529		0.709821
	19 to 28  		141888 		-0.0736		0.529316
	18 to 27  		142209 		 1.0333		0.150721
	17 to 26  		141562 		-1.1977		0.884481
	16 to 25  		142092 		 0.6299		0.264381
	15 to 24  		141537 		-1.2839		0.900411
	14 to 23  		142009 		 0.3437		0.365540
	13 to 22  		141760 		-0.5149		0.696699
	12 to 21  		141489 		-1.4494		0.926389
	11 to 20  		142037 		 0.4402		0.329881
	10 to 19  		142061 		 0.5230		0.300487
	9 to 18  		142273 		 1.2540		0.104915
	8 to 17  		141398 		-1.7632		0.961067
	7 to 16  		141803 		-0.3667		0.643062
	6 to 15  		141422 		-1.6804		0.953565
	5 to 14  		141642 		-0.9218		0.821691
	4 to 13  		142188 		 0.9609		0.168293
	3 to 12  		142228 		 1.0989		0.135914
	2 to 11  		141903 		-0.0218		0.508707
	1 to 10  		141975 		 0.2264		0.410426
	-----------------------------------------------------------------

	|------------------------------------------------------------ |
	|    OQSO means Overlapping-Quadruples-Sparse-Occupancy       |
	|  The test OQSO is similar, except that it considers 4-letter|
	|words from an alphabet of 32 letters, each letter determined |
	|by a designated string of 5 consecutive bits from the test   |
	|file, elements of which are assumed 32-bit random integers.  |
	|The mean number of missing words in a sequence of 2^21 four- |
	|letter words,  (2^21+3 "keystrokes"), is again 141909, with  |
	|sigma = 295.  The mean is based on theory; sigma comes from  |
	|extensive simulation.                                        |
	|------------------------------------------------------------ |

			   OQSO test for file tranut.bin

	Bits used	No. missing words	z-score		p-value
	28 to 32  		141902 		-0.0248		0.509912
	27 to 31  		142215 		 1.0362		0.150062
	26 to 30  		142039 		 0.4396		0.330128
	25 to 29  		142019 		 0.3718		0.355035
	24 to 28  		141630 		-0.9469		0.828150
	23 to 27  		141757 		-0.5164		0.697203
	22 to 26  		142098 		 0.6396		0.261230
	21 to 25  		141497 		-1.3977		0.918903
	20 to 24  		141880 		-0.0994		0.539599
	19 to 23  		141714 		-0.6621		0.746058
	18 to 22  		141860 		-0.1672		0.566402
	17 to 21  		141950 		 0.1379		0.445174
	16 to 20  		141491 		-1.4181		0.921914
	15 to 19  		141773 		-0.4621		0.678008
	14 to 18  		142083 		 0.5887		0.278027
	13 to 17  		141787 		-0.4147		0.660811
	12 to 16  		142390 		 1.6294		0.051615
	11 to 15  		142426 		 1.7514		0.039936
	10 to 14  		141599 		-1.0520		0.853592
	9 to 13  		141617 		-0.9909		0.839145
	8 to 12  		141973 		 0.2158		0.414560
	7 to 11  		142242 		 1.1277		0.129724
	6 to 10  		142034 		 0.4226		0.336290
	5 to 9  		142361 		 1.5311		0.062874
	4 to 8  		142024 		 0.3887		0.348745
	3 to 7  		141980 		 0.2396		0.405336
	2 to 6  		142373 		 1.5718		0.058003
	1 to 5  		141978 		 0.2328		0.407966
	-----------------------------------------------------------------

	|------------------------------------------------------------ |
	|    The DNA test considers an alphabet of 4 letters: C,G,A,T,|
	|determined by two designated bits in the sequence of random  |
	|integers being tested.  It considers 10-letter words, so that|
	|as in OPSO and OQSO, there are 2^20 possible words, and the  |
	|mean number of missing words from a string of 2^21  (over-   |
	|lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.  |
	|The standard deviation sigma=339 was determined as for OQSO  |
	|by simulation.  (Sigma for OPSO, 290, is the true value (to  |
	|three places), not determined by simulation.                 |
	|------------------------------------------------------------ |

			   DNA test for file tranut.bin

	Bits used	No. missing words	z-score		p-value
	31 to 32  		141911 		 0.0049		0.498035
	30 to 31  		142420 		 1.5064		0.065982
	29 to 30  		142209 		 0.8840		0.188353
	28 to 29  		142475 		 1.6686		0.047594
	27 to 28  		141916 		 0.0197		0.492151
	26 to 27  		142271 		 1.0669		0.143015
	25 to 26  		141800 		-0.3225		0.626466
	24 to 25  		141713 		-0.5791		0.718754
	23 to 24  		142196 		 0.8456		0.198878
	22 to 23  		141961 		 0.1524		0.439428
	21 to 22  		142531 		 1.8338		0.033339
	20 to 21  		141476 		-1.2783		0.899421
	19 to 20  		141907 		-0.0069		0.502742
	18 to 19  		141785 		-0.3668		0.643099
	17 to 18  		141741 		-0.4965		0.690246
	16 to 17  		141805 		-0.3078		0.620867
	15 to 16  		141257 		-1.9243		0.972840
	14 to 15  		142018 		 0.3206		0.374272
	13 to 14  		141848 		-0.1809		0.571783
	12 to 13  		141712 		-0.5821		0.719748
	11 to 12  		142000 		 0.2675		0.394556
	10 to 11  		142210 		 0.8869		0.187558
	9 to 10  		142036 		 0.3737		0.354329
	8 to 9  		141897 		-0.0364		0.514507
	7 to 8  		142017 		 0.3176		0.375390
	6 to 7  		142019 		 0.3235		0.373154
	5 to 6  		141194 		-2.1101		0.982576
	4 to 5  		142459 		 1.6214		0.052461
	3 to 4  		140970 		-2.7709		0.997205
	2 to 3  		142387 		 1.4091		0.079409
	1 to 2  		142445 		 1.5801		0.057037
	-----------------------------------------------------------------

	|-------------------------------------------------------------|
	|    This is the COUNT-THE-1''s TEST on a stream of bytes.    |
	|Consider the file under test as a stream of bytes (four per  |
	|32 bit integer).  Each byte can contain from 0 to 8 1''s,    |
	|with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let |
	|the stream of bytes provide a string of overlapping  5-letter|
	|words, each "letter" taking values A,B,C,D,E. The letters are|
	|determined by the number of 1''s in a byte: 0,1,or 2 yield A,|
	|3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus|
	|we have a monkey at a typewriter hitting five keys with vari-|
	|ous probabilities (37,56,70,56,37 over 256).  There are 5^5  |
	|possible 5-letter words, and from a string of 256,000 (over- |
	|lapping) 5-letter words, counts are made on the frequencies  |
	|for each word.   The quadratic form in the weak inverse of   |
	|the covariance matrix of the cell counts provides a chisquare|
	|test: Q5-Q4, the difference of the naive Pearson sums of     |
	|(OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.   |
	|-------------------------------------------------------------|

		Test result for the byte stream from tranut.bin
	  (Degrees of freedom: 5^4-5^3=2500; sample size: 2560000)

			chisquare	z-score		p-value
			2381.17		-1.681		0.953577

	|-------------------------------------------------------------|
	|    This is the COUNT-THE-1''s TEST for specific bytes.      |
	|Consider the file under test as a stream of 32-bit integers. |
	|From each integer, a specific byte is chosen , say the left- |
	|most: bits 1 to 8. Each byte can contain from 0 to 8 1''s,   |
	|with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let  |
	|the specified bytes from successive integers provide a string|
	|of (overlapping) 5-letter words, each "letter" taking values |
	|A,B,C,D,E. The letters are determined  by the number of 1''s,|
	|in that byte: 0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D, |
	|and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter |
	|hitting five keys with with various probabilities: 37,56,70, |
	|56,37 over 256. There are 5^5 possible 5-letter words, and   |
	|from a string of 256,000 (overlapping) 5-letter words, counts|
	|are made on the frequencies for each word. The quadratic form|
	|in the weak inverse of the covariance matrix of the cell     |
	|counts provides a chisquare test: Q5-Q4, the difference of   |
	|the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-  |
	|and 4-letter cell  counts.                                   |
	|-------------------------------------------------------------|

		Test results for specific bytes from tranut.bin
	  (Degrees of freedom: 5^4-5^3=2500; sample size: 256000)

	bits used	chisquare	z-score		p-value
	1 to 8  	2502.61		 0.037		0.485300
	2 to 9  	2543.13		 0.610		0.270926
	3 to 10  	2493.92		-0.086		0.534281
	4 to 11  	2492.29		-0.109		0.543426
	5 to 12  	2444.06		-0.791		0.785558
	6 to 13  	2606.31		 1.503		0.066368
	7 to 14  	2425.32		-1.056		0.854549
	8 to 15  	2482.50		-0.247		0.597738
	9 to 16  	2500.61		 0.009		0.496549
	10 to 17  	2425.23		-1.057		0.854835
	11 to 18  	2534.77		 0.492		0.311455
	12 to 19  	2652.83		 2.161		0.015335
	13 to 20  	2573.35		 1.037		0.149794
	14 to 21  	2556.50		 0.799		0.212127
	15 to 22  	2468.76		-0.442		0.670680
	16 to 23  	2539.25		 0.555		0.289400
	17 to 24  	2540.06		 0.567		0.285512
	18 to 25  	2512.79		 0.181		0.428245
	19 to 26  	2451.08		-0.692		0.755481
	20 to 27  	2572.33		 1.023		0.153171
	21 to 28  	2464.83		-0.497		0.690515
	22 to 29  	2370.66		-1.829		0.966316
	23 to 30  	2685.77		 2.627		0.004305
	24 to 31  	2462.39		-0.532		0.702606
	25 to 32  	2521.47		 0.304		0.380697
	|-------------------------------------------------------------|
	|              THIS IS A PARKING LOT TEST                     |
	|In a square of side 100, randomly "park" a car---a circle of |
	|radius 1.   Then try to park a 2nd, a 3rd, and so on, each   |
	|time parking "by ear".  That is, if an attempt to park a car |
	|causes a crash with one already parked, try again at a new   |
	|random location. (To avoid path problems, consider parking   |
	|helicopters rather than cars.)   Each attempt leads to either|
	|a crash or a success, the latter followed by an increment to |
	|the list of cars already parked. If we plot n: the number of |
	|attempts, versus k: the number successfully parked, we get a |
	|curve that should be similar to those provided by a perfect  |
	|random number generator.  Theory for the behavior of such a  |
	|random curve seems beyond reach, and as graphics displays are|
	|not available for this battery of tests, a simple characteriz|
	|ation of the random experiment is used: k, the number of cars|
	|successfully parked after n=12,000 attempts. Simulation shows|
	|that k should average 3523 with sigma 21.9 and is very close |
	|to normally distributed.  Thus (k-3523)/21.9 should be a st- |
	|andard normal variable, which, converted to a uniform varia- |
	|ble, provides input to a KSTEST based on a sample of 10.     |
	|-------------------------------------------------------------|

		CDPARK: result of 10 tests on file tranut.bin
	  (Of 12000 tries, the average no. of successes should be 
	   3523.0 with sigma=21.9)

	   No. succeses		z-score		p-value
		3523		 0.0000		0.500000
		3495		-1.2785		0.899470
		3534		 0.5023		0.307734
		3497		-1.1872		0.882429
		3533		 0.4566		0.323972
		3503		-0.9132		0.819442
		3518		-0.2283		0.590298
		3510		-0.5936		0.723613
		3532		 0.4110		0.340551
		3535		 0.5479		0.291865
	  Square side=100, avg. no. parked=3518.00 sample std.=15.00
	     p-value of the KSTEST for those 10 p-values: 0.031575


	|-------------------------------------------------------------|
	|              THE MINIMUM DISTANCE TEST                      |
	|It does this 100 times:  choose n=8000 random points in a    |
	|square of side 10000.  Find d, the minimum distance between  |
	|the (n^2-n)/2 pairs of points.  If the points are truly inde-|
	|pendent uniform, then d^2, the square of the minimum distance|
	|should be (very close to) exponentially distributed with mean|
	|.995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and |
	|a KSTEST on the resulting 100 values serves as a test of uni-|
	|formity for random points in the square. Test numbers=0 mod 5|
	|are printed but the KSTEST is based on the full set of 100   |
	|random choices of 8000 points in the 10000x10000 square.     |
	|-------------------------------------------------------------|

		This is the MINIMUM DISTANCE test for file tranut.bin

	Sample no.	 d^2		 mean		equiv uni
	   5		0.8708		6.0908		0.583215
	   10		0.2031		3.4673		0.184625
	   15		0.3868		2.4261		0.322097
	   20		0.2030		2.1120		0.184577
	   25		0.3864		1.8006		0.321801
	   30		0.1050		1.5689		0.100107
	   35		2.0682		1.4865		0.874890
	   40		0.0762		1.4341		0.073769
	   45		0.6851		1.3165		0.497712
	   50		0.3031		1.2780		0.262597
	   55		0.2392		1.2092		0.213726
	   60		1.2275		1.1823		0.708779
	   65		0.4887		1.1484		0.388076
	   70		2.4689		1.1623		0.916369
	   75		0.0731		1.1253		0.070867
	   80		0.3687		1.0841		0.309659
	   85		1.1000		1.0831		0.668966
	   90		0.8183		1.0646		0.560636
	   95		1.2907		1.0930		0.726702
	   100		0.4897		1.0912		0.388682
	--------------------------------------------------------------
	Result of KS test on 100 transformed mindist^2's: p-value=0.336347


				NOTE

	Most of the tests in DIEHARD return a p-value, which
	should be uniform on [0,1) if the input file contains truly
	independent random bits.   Those p-values are obtained by
	p=1-F(X), where F is the assumed distribution of the sample
	random variable X---often normal. But that assumed F is often just
	an asymptotic approximation, for which the fit will be worst
	in the tails. Thus you should not be surprised with  occasion-
	al p-values near 0 or 1, such as .0012 or .9983. When a bit
	stream really FAILS BIG, you will get p`s of 0 or 1 to six 
	or more places.  By all means, do not, as a Statistician 
	might, think that a p < .025 or p> .975 means that the RNG
	has "failed the test at the .05 level".  Such p`s happen
	among the hundreds that DIEHARD produces, even with good RNGs.
	 So keep in mind that "p happens"

	Enter the name of the file to be tested.
	This must be a form="unformatted",access="direct" binary
	file of about 10-12 million bytes. Enter file name: 


		HERE ARE YOUR CHOICES:

		1   Birthday Spacings
		2   Overlapping Permutations
		3   Ranks of 31x31 and 32x32 matrices
		4   Ranks of 6x8 Matrices
		5   Monkey Tests on 20-bit Words
		6   Monkey Tests OPSO,OQSO,DNA
		7   Count the 1`s in a Stream of Bytes
		8   Count the 1`s in Specific Bytes
		9   Parking Lot Test
		10  Minimum Distance Test
		11  Random Spheres Test
		12  The Sqeeze Test
		13  Overlapping Sums Test
		14  Runs Test
		15  The Craps Test
		16  All of the above

	To choose any particular tests, enter corresponding numbers.
	Enter 16 for all tests. If you want to perform all but a few
	tests, enter corresponding numbers preceded by "-" sign.
	Tests are executed in the order they are entered.

	Enter your choices.

	|-------------------------------------------------------------|
	|             THE 3DSPHERES TEST                              |
	|Choose  4000 random points in a cube of edge 1000.  At each  |
	|point, center a sphere large enough to reach the next closest|
	|point. Then the volume of the smallest such sphere is (very  |
	|close to) exponentially distributed with mean 120pi/3.  Thus |
	|the radius cubed is exponential with mean 30. (The mean is   |
	|obtained by extensive simulation).  The 3DSPHERES test gener-|
	|ates 4000 such spheres 20 times.  Each min radius cubed leads|
	|to a uniform variable by means of 1-exp(-r^3/30.), then a    |
	| KSTEST is done on the 20 p-values.                          |
	|-------------------------------------------------------------|

		    The 3DSPHERES test for file tranut.bin

		sample no	r^3		equiv. uni.
		   1		18.739		0.464548
		   2		1.057		0.034626
		   3		5.041		0.154686
		   4		31.295		0.647666
		   5		2.007		0.064713
		   6		6.755		0.201608
		   7		20.622		0.497126
		   8		21.879		0.517751
		   9		0.632		0.020859
		   10		48.958		0.804448
		   11		12.259		0.335434
		   12		4.527		0.140080
		   13		63.055		0.877766
		   14		21.961		0.519077
		   15		34.196		0.680139
		   16		0.133		0.004420
		   17		22.378		0.525706
		   18		41.399		0.748416
		   19		3.892		0.121679
		   20		47.334		0.793569
	--------------------------------------------------------------
		p-value for KS test on those 20 p-values: 0.156121


	|-------------------------------------------------------------|
	|                 This is the SQUEEZE test                    |
	| Random integers are floated to get uniforms on [0,1). Start-|
	| ing with k=2^31=2147483647, the test finds j, the number of |
	| iterations necessary to reduce k to 1, using the reduction  |
	| k=ceiling(k*U), with U provided by floating integers from   |
	| the file being tested.  Such j''s are found 100,000 times,  |
	| then counts for the number of times j was <=6,7,...,47,>=48 |
	| are used to provide a chi-square test for cell frequencies. |
	|-------------------------------------------------------------|

			RESULTS OF SQUEEZE TEST FOR tranut.bin

		    Table of standardized frequency counts
		(obs-exp)^2/exp  for j=(1,..,6), 7,...,47,(48,...)
		-0.1  	-1.2  	 0.8  	-1.1  	 0.6  	-0.7  
		-1.4  	 0.4  	 0.7  	 2.1  	 0.2  	-1.0  
		-0.7  	 0.3  	-0.4  	-0.5  	-0.6  	-0.1  
		 0.4  	 0.6  	 0.8  	 0.5  	-0.0  	-0.0  
		-1.0  	-1.1  	-1.1  	 2.0  	-0.1  	-0.2  
		-0.8  	 2.4  	 0.1  	 1.3  	 1.2  	-0.3  
		-0.2  	-1.3  	-2.0  	-0.1  	-1.3  	 0.0  
		-0.1  
		Chi-square with 42 degrees of freedom:39.888664
		z-score=-0.230366, p-value=0.564038
	_____________________________________________________________


	|-------------------------------------------------------------|
	|    This is the RUNS test.  It counts runs up, and runs down,|
	|in a sequence of uniform [0,1) variables, obtained by float- |
	|ing the 32-bit integers in the specified file. This example  |
	|shows how runs are counted: .123,.357,.789,.425,.224,.416,.95|
	|contains an up-run of length 3, a down-run of length 2 and an|
	|up-run of (at least) 2, depending on the next values.  The   |
	|covariance matrices for the runs-up and runs-down are well   |
	|known, leading to chisquare tests for quadratic forms in the |
	|weak inverses of the covariance matrices.  Runs are counted  |
	|for sequences of length 10,000.  This is done ten times. Then|
	|another three sets of ten.                                   |
	|-------------------------------------------------------------|

			The RUNS test for file tranut.bin
		(Up and down runs in a sequence of 10000 numbers)
				Set 1
		 runs up; ks test for 10 p's: 0.089523
		 runs down; ks test for 10 p's: 0.709998
				Set 2
		 runs up; ks test for 10 p's: 0.409246
		 runs down; ks test for 10 p's: 0.518679

	|-------------------------------------------------------------|
	|This the CRAPS TEST.  It plays 200,000 games of craps, counts|
	|the number of wins and the number of throws necessary to end |
	|each game.  The number of wins should be (very close to) a   |
	|normal with mean 200000p and variance 200000p(1-p), and      |
	|p=244/495.  Throws necessary to complete the game can vary   |
	|from 1 to infinity, but counts for all>21 are lumped with 21.|
	|A chi-square test is made on the no.-of-throws cell counts.  |
	|Each 32-bit integer from the test file provides the value for|
	|the throw of a die, by floating to [0,1), multiplying by 6   |
	|and taking 1 plus the integer part of the result.            |
	|-------------------------------------------------------------|

		RESULTS OF CRAPS TEST FOR tranut.bin 
	No. of wins:  Observed	Expected
	                 98413        98585.858586
		z-score=-0.773, pvalue=0.78028

	Analysis of Throws-per-Game:

	Throws	Observed	Expected	Chisq	 Sum of (O-E)^2/E
	1	66760		66666.7		0.131		0.131
	2	37770		37654.3		0.355		0.486
	3	26932		26954.7		0.019		0.505
	4	19218		19313.5		0.472		0.977
	5	13774		13851.4		0.433		1.410
	6	9803		9943.5		1.986		3.396
	7	7169		7145.0		0.080		3.477
	8	5217		5139.1		1.182		4.658
	9	3752		3699.9		0.735		5.393
	10	2631		2666.3		0.467		5.860
	11	1966		1923.3		0.947		6.807
	12	1414		1388.7		0.459		7.266
	13	1034		1003.7		0.914		8.180
	14	696		726.1		1.251		9.431
	15	493		525.8		2.050		11.482
	16	363		381.2		0.864		12.346
	17	282		276.5		0.108		12.454
	18	199		200.8		0.017		12.471
	19	131		146.0		1.538		14.009
	20	102		106.2		0.167		14.176
	21	294		287.1		0.165		14.341

	Chisq=  14.34 for 20 degrees of freedom, p= 0.81279

		SUMMARY of craptest on tranut.bin
	 p-value for no. of wins: 0.780276
	 p-value for throws/game: 0.812792
	_____________________________________________________________

