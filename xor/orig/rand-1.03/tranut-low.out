Diehard output from tranut run testing low 32 bits with data:
583149 20000
==========================================================================
				NOTE

	Most of the tests in DIEHARD return a p-value, which
	should be uniform on [0,1) if the input file contains truly
	independent random bits.   Those p-values are obtained by
	p=1-F(X), where F is the assumed distribution of the sample
	random variable X---often normal. But that assumed F is often just
	an asymptotic approximation, for which the fit will be worst
	in the tails. Thus you should not be surprised with  occasion-
	al p-values near 0 or 1, such as .0012 or .9983. When a bit
	stream really FAILS BIG, you will get p`s of 0 or 1 to six 
	or more places.  By all means, do not, as a Statistician 
	might, think that a p < .025 or p> .975 means that the RNG
	has "failed the test at the .05 level".  Such p`s happen
	among the hundreds that DIEHARD produces, even with good RNGs.
	 So keep in mind that "p happens"

	Enter the name of the file to be tested.
	This must be a form="unformatted",access="direct" binary
	file of about 10-12 million bytes. Enter file name: 


		HERE ARE YOUR CHOICES:

		1   Birthday Spacings
		2   Overlapping Permutations
		3   Ranks of 31x31 and 32x32 matrices
		4   Ranks of 6x8 Matrices
		5   Monkey Tests on 20-bit Words
		6   Monkey Tests OPSO,OQSO,DNA
		7   Count the 1`s in a Stream of Bytes
		8   Count the 1`s in Specific Bytes
		9   Parking Lot Test
		10  Minimum Distance Test
		11  Random Spheres Test
		12  The Sqeeze Test
		13  Overlapping Sums Test
		14  Runs Test
		15  The Craps Test
		16  All of the above

	To choose any particular tests, enter corresponding numbers.
	Enter 16 for all tests. If you want to perform all but a few
	tests, enter corresponding numbers preceded by "-" sign.
	Tests are executed in the order they are entered.

	Enter your choices.

	|-------------------------------------------------------------|
	|           This is the BIRTHDAY SPACINGS TEST                |
	|Choose m birthdays in a "year" of n days.  List the spacings |
	|between the birthdays.  Let j be the number of values that   |
	|occur more than once in that list, then j is asymptotically  |
	|Poisson distributed with mean m^3/(4n).  Experience shows n  |
	|must be quite large, say n>=2^18, for comparing the results  |
	|to the Poisson distribution with that mean.  This test uses  |
	|n=2^24 and m=2^10, so that the underlying distribution for j |
	|is taken to be Poisson with lambda=2^30/(2^26)=16. A sample  |
	|of 200 j''s is taken, and a chi-square goodness of fit test  |
	|provides a p value.  The first test uses bits 1-24 (counting |
	|from the left) from integers in the specified file.  Then the|
	|file is closed and reopened, then bits 2-25 of the same inte-|
	|gers are used to provide birthdays, and so on to bits 9-32.  |
	|Each set of bits provides a p-value, and the nine p-values   |
	|provide a sample for a KSTEST.                               |
	|------------------------------------------------------------ |

		RESULTS OF BIRTHDAY SPACINGS TEST FOR tranut.bin
	(no_bdays=1024, no_days/yr=2^24, lambda=16.00, sample size=500)

	Bits used	mean		chisqr		p-value
	 1 to 24	15.84		23.9039		0.122070
	 2 to 25	15.80		22.3308		0.172330
	 3 to 26	16.02		12.7432		0.753203
	 4 to 27	16.01		13.4086		0.708433
	 5 to 28	15.76		15.8318		0.535789
	 6 to 29	15.83		14.2279		0.650910
	 7 to 30	15.68		8.2619		0.960620
	 8 to 31	15.88		25.0806		0.092919
	 9 to 32	15.93		20.8964		0.230961

			degree of freedoms is: 17
	---------------------------------------------------------------
		p-value for KStest on those 9 p-values: 0.879232


	|-------------------------------------------------------------|
	|This is the BINARY RANK TEST for 31x31 matrices. The leftmost|
	|31 bits of 31 random integers from the test sequence are used|
	|to form a 31x31 binary matrix over the field {0,1}. The rank |
	|is determined. That rank can be from 0 to 31, but ranks< 28  |
	|are rare, and their counts are pooled with those for rank 28.|
	|Ranks are found for 40,000 such random matrices and a chisqu-|
	|are test is performed on counts for ranks 31,30,28 and <=28. |
	|-------------------------------------------------------------|
		Rank test for binary matrices (31x31) from tranut.bin

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=28	203         	211.4       	0.335       	0.335       
	r=29	5137        	5134.0      	0.002       	0.337       
	r=30	23094       	23103.0     	0.004       	0.340       
	r=31	11566       	11551.5     	0.018       	0.359       

		chi-square = 0.359 with df = 3;  p-value = 0.949
	--------------------------------------------------------------

	|-------------------------------------------------------------|
	|This is the BINARY RANK TEST for 32x32 matrices. A random 32x|
	|32 binary matrix is formed, each row a 32-bit random integer.|
	|The rank is determined. That rank can be from 0 to 32, ranks |
	|less than 29 are rare, and their counts are pooled with those|
	|for rank 29.  Ranks are found for 40,000 such random matrices|
	|and a chisquare test is performed on counts for ranks  32,31,|
	|30 and <=29.                                                 |
	|-------------------------------------------------------------|
		Rank test for binary matrices (32x32) from tranut.bin

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=29	201         	211.4       	0.513       	0.513       
	r=30	5210        	5134.0      	1.125       	1.638       
	r=31	23073       	23103.0     	0.039       	1.677       
	r=32	11516       	11551.5     	0.109       	1.786       

		chi-square = 1.786 with df = 3;  p-value = 0.618
	--------------------------------------------------------------

	|-------------------------------------------------------------|
	|This is the BINARY RANK TEST for 6x8 matrices.  From each of |
	|six random 32-bit integers from the generator under test, a  |
	|specified byte is chosen, and the resulting six bytes form a |
	|6x8 binary matrix whose rank is determined.  That rank can be|
	|from 0 to 6, but ranks 0,1,2,3 are rare; their counts are    |
	|pooled with those for rank 4. Ranks are found for 100,000    |
	|random matrices, and a chi-square test is performed on       |
	|counts for ranks 6,5 and (0,...,4) (pooled together).        |
	|-------------------------------------------------------------|

		Rank test for binary matrices (6x8) from tranut.bin

			      bits  1 to  8

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	922         	944.3       	0.527       	0.527       
	r=5	21926       	21743.9     	1.525       	2.052       
	r=6	77152       	77311.8     	0.330       	2.382       

		chi-square = 2.382 with df = 2;  p-value = 0.304
	--------------------------------------------------------------

			      bits  2 to  9

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	942         	944.3       	0.006       	0.006       
	r=5	21834       	21743.9     	0.373       	0.379       
	r=6	77224       	77311.8     	0.100       	0.479       

		chi-square = 0.479 with df = 2;  p-value = 0.787
	--------------------------------------------------------------

			      bits  3 to 10

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	944         	944.3       	0.000       	0.000       
	r=5	21618       	21743.9     	0.729       	0.729       
	r=6	77438       	77311.8     	0.206       	0.935       

		chi-square = 0.935 with df = 2;  p-value = 0.627
	--------------------------------------------------------------

			      bits  4 to 11

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	915         	944.3       	0.909       	0.909       
	r=5	21674       	21743.9     	0.225       	1.134       
	r=6	77411       	77311.8     	0.127       	1.261       

		chi-square = 1.261 with df = 2;  p-value = 0.532
	--------------------------------------------------------------

			      bits  5 to 12

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	942         	944.3       	0.006       	0.006       
	r=5	21838       	21743.9     	0.407       	0.413       
	r=6	77220       	77311.8     	0.109       	0.522       

		chi-square = 0.522 with df = 2;  p-value = 0.770
	--------------------------------------------------------------

			      bits  6 to 13

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	996         	944.3       	2.831       	2.831       
	r=5	21823       	21743.9     	0.288       	3.118       
	r=6	77181       	77311.8     	0.221       	3.340       

		chi-square = 3.340 with df = 2;  p-value = 0.188
	--------------------------------------------------------------

			      bits  7 to 14

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	958         	944.3       	0.199       	0.199       
	r=5	21717       	21743.9     	0.033       	0.232       
	r=6	77325       	77311.8     	0.002       	0.234       

		chi-square = 0.234 with df = 2;  p-value = 0.889
	--------------------------------------------------------------

			      bits  8 to 15

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	957         	944.3       	0.171       	0.171       
	r=5	21844       	21743.9     	0.461       	0.632       
	r=6	77199       	77311.8     	0.165       	0.796       

		chi-square = 0.796 with df = 2;  p-value = 0.672
	--------------------------------------------------------------

			      bits  9 to 16

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	933         	944.3       	0.135       	0.135       
	r=5	21811       	21743.9     	0.207       	0.342       
	r=6	77256       	77311.8     	0.040       	0.383       

		chi-square = 0.383 with df = 2;  p-value = 0.826
	--------------------------------------------------------------

			      bits 10 to 17

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	989         	944.3       	2.116       	2.116       
	r=5	21614       	21743.9     	0.776       	2.892       
	r=6	77397       	77311.8     	0.094       	2.986       

		chi-square = 2.986 with df = 2;  p-value = 0.225
	--------------------------------------------------------------

			      bits 11 to 18

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	1012        	944.3       	4.854       	4.854       
	r=5	21630       	21743.9     	0.597       	5.450       
	r=6	77358       	77311.8     	0.028       	5.478       

		chi-square = 5.478 with df = 2;  p-value = 0.065
	--------------------------------------------------------------

			      bits 12 to 19

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	961         	944.3       	0.295       	0.295       
	r=5	21905       	21743.9     	1.194       	1.489       
	r=6	77134       	77311.8     	0.409       	1.898       

		chi-square = 1.898 with df = 2;  p-value = 0.387
	--------------------------------------------------------------

			      bits 13 to 20

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	922         	944.3       	0.527       	0.527       
	r=5	21829       	21743.9     	0.333       	0.860       
	r=6	77249       	77311.8     	0.051       	0.911       

		chi-square = 0.911 with df = 2;  p-value = 0.634
	--------------------------------------------------------------

			      bits 14 to 21

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	934         	944.3       	0.112       	0.112       
	r=5	21624       	21743.9     	0.661       	0.773       
	r=6	77442       	77311.8     	0.219       	0.993       

		chi-square = 0.993 with df = 2;  p-value = 0.609
	--------------------------------------------------------------

			      bits 15 to 22

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	923         	944.3       	0.480       	0.480       
	r=5	21809       	21743.9     	0.195       	0.675       
	r=6	77268       	77311.8     	0.025       	0.700       

		chi-square = 0.700 with df = 2;  p-value = 0.705
	--------------------------------------------------------------

			      bits 16 to 23

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	894         	944.3       	2.679       	2.679       
	r=5	21761       	21743.9     	0.013       	2.693       
	r=6	77345       	77311.8     	0.014       	2.707       

		chi-square = 2.707 with df = 2;  p-value = 0.258
	--------------------------------------------------------------

			      bits 17 to 24

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	951         	944.3       	0.048       	0.048       
	r=5	21609       	21743.9     	0.837       	0.884       
	r=6	77440       	77311.8     	0.213       	1.097       

		chi-square = 1.097 with df = 2;  p-value = 0.578
	--------------------------------------------------------------

			      bits 18 to 25

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	932         	944.3       	0.160       	0.160       
	r=5	21745       	21743.9     	0.000       	0.160       
	r=6	77323       	77311.8     	0.002       	0.162       

		chi-square = 0.162 with df = 2;  p-value = 0.922
	--------------------------------------------------------------

			      bits 19 to 26

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	930         	944.3       	0.217       	0.217       
	r=5	21567       	21743.9     	1.439       	1.656       
	r=6	77503       	77311.8     	0.473       	2.129       

		chi-square = 2.129 with df = 2;  p-value = 0.345
	--------------------------------------------------------------

			      bits 20 to 27

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	974         	944.3       	0.934       	0.934       
	r=5	21638       	21743.9     	0.516       	1.450       
	r=6	77388       	77311.8     	0.075       	1.525       

		chi-square = 1.525 with df = 2;  p-value = 0.467
	--------------------------------------------------------------

			      bits 21 to 28

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	947         	944.3       	0.008       	0.008       
	r=5	21773       	21743.9     	0.039       	0.047       
	r=6	77280       	77311.8     	0.013       	0.060       

		chi-square = 0.060 with df = 2;  p-value = 0.971
	--------------------------------------------------------------

			      bits 22 to 29

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	923         	944.3       	0.480       	0.480       
	r=5	21730       	21743.9     	0.009       	0.489       
	r=6	77347       	77311.8     	0.016       	0.505       

		chi-square = 0.505 with df = 2;  p-value = 0.777
	--------------------------------------------------------------

			      bits 23 to 30

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	989         	944.3       	2.116       	2.116       
	r=5	21718       	21743.9     	0.031       	2.147       
	r=6	77293       	77311.8     	0.005       	2.151       

		chi-square = 2.151 with df = 2;  p-value = 0.341
	--------------------------------------------------------------

			      bits 24 to 31

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	921         	944.3       	0.575       	0.575       
	r=5	21695       	21743.9     	0.110       	0.685       
	r=6	77384       	77311.8     	0.067       	0.752       

		chi-square = 0.752 with df = 2;  p-value = 0.686
	--------------------------------------------------------------

			      bits 25 to 32

	RANK	OBSERVED	EXPECTED	(O-E)^2/E	SUM

	r<=4	914         	944.3       	0.972       	0.972       
	r=5	21723       	21743.9     	0.020       	0.992       
	r=6	77363       	77311.8     	0.034       	1.026       

		chi-square = 1.026 with df = 2;  p-value = 0.599
	--------------------------------------------------------------
	    TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
	    These should be 25 uniform [0,1] random variates:
 
	0.303922    	0.787155    	0.626543    	0.532293    	0.770344     
	0.188285    	0.889455    	0.671594    	0.825901    	0.224712     
	0.064639    	0.387161    	0.634228    	0.608728    	0.704628     
	0.258330    	0.577802    	0.922243    	0.344969    	0.466500     
	0.970569    	0.776715    	0.341064    	0.686496    	0.598625    
		The KS test for those 25 supposed UNI's yields
			KS p-value = 0.308260

	|-------------------------------------------------------------|
	|                  THE BITSTREAM TEST                         |
	|The file under test is viewed as a stream of bits. Call them |
	|b1,b2,... .  Consider an alphabet with two "letters", 0 and 1|
	|and think of the stream of bits as a succession of 20-letter |
	|"words", overlapping.  Thus the first word is b1b2...b20, the|
	|second is b2b3...b21, and so on.  The bitstream test counts  |
	|the number of missing 20-letter (20-bit) words in a string of|
	|2^21 overlapping 20-letter words.  There are 2^20 possible 20|
	|letter words.  For a truly random string of 2^21+19 bits, the|
	|number of missing words j should be (very close to) normally |
	|distributed with mean 141,909 and sigma 428.  Thus           |
	| (j-141909)/428 should be a standard normal variate (z score)|
	|that leads to a uniform [0,1) p value.  The test is repeated |
	|twenty times.                                                |
	|-------------------------------------------------------------|

		THE OVERLAPPING 20-TUPLES BITSTREAM  TEST for tranut.bin
	 (20 bits/word, 2097152 words 20 bitstreams. No. missing words 
	  should average 141909.33 with sigma=428.00.)
	----------------------------------------------------------------
		   BITSTREAM test results for tranut.bin.

	Bitstream	No. missing words	z-score		p-value
	   1		141645 			-0.62		0.731578
	   2		141734 			-0.41		0.658968
	   3		141727 			-0.43		0.664948
	   4		141956 			 0.11		0.456585
	   5		142320 			 0.96		0.168651
	   6		142385 			 1.11		0.133203
	   7		142433 			 1.22		0.110565
	   8		142213 			 0.71		0.239004
	   9		141997 			 0.20		0.418850
	   10		142038 			 0.30		0.381848
	   11		141905 			-0.01		0.504036
	   12		141814 			-0.22		0.588129
	   13		141830 			-0.19		0.573523
	   14		142006 			 0.23		0.410653
	   15		142798 			 2.08		0.018932
	   16		141729 			-0.42		0.663244
	   17		142333 			 0.99		0.161116
	   18		142548 			 1.49		0.067821
	   19		141608 			-0.70		0.759297
	   20		141402 			-1.19		0.882061
	----------------------------------------------------------------

	|-------------------------------------------------------------|
	|        OPSO means Overlapping-Pairs-Sparse-Occupancy        |
	|The OPSO test considers 2-letter words from an alphabet of   |
	|1024 letters.  Each letter is determined by a specified ten  |
	|bits from a 32-bit integer in the sequence to be tested. OPSO|
	|generates  2^21 (overlapping) 2-letter words  (from 2^21+1   |
	|"keystrokes")  and counts the number of missing words---that |
	|is 2-letter words which do not appear in the entire sequence.|
	|That count should be very close to normally distributed with |
	|mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should|
	|be a standard normal variable. The OPSO test takes 32 bits at|
	|a time from the test file and uses a designated set of ten   |
	|consecutive bits. It then restarts the file for the next de- |
	|signated 10 bits, and so on.                                 |
	|------------------------------------------------------------ |

			   OPSO test for file tranut.bin

	Bits used	No. missing words	z-score		p-value
	23 to 32  		142060 		 0.5196		0.301688
	22 to 31  		141859 		-0.1736		0.568891
	21 to 30  		142334 		 1.4644		0.071545
	20 to 29  		141389 		-1.7942		0.963613
	19 to 28  		141983 		 0.2540		0.399734
	18 to 27  		142188 		 0.9609		0.168293
	17 to 26  		142204 		 1.0161		0.154790
	16 to 25  		142060 		 0.5196		0.301688
	15 to 24  		142519 		 2.1023		0.017763
	14 to 23  		141547 		-1.2494		0.894243
	13 to 22  		142440 		 1.8299		0.033633
	12 to 21  		141925 		 0.0540		0.478454
	11 to 20  		142634 		 2.4989		0.006230
	10 to 19  		142171 		 0.9023		0.183446
	9 to 18  		142056 		 0.5058		0.306513
	8 to 17  		141700 		-0.7218		0.764800
	7 to 16  		141510 		-1.3770		0.915744
	6 to 15  		141695 		-0.7391		0.770067
	5 to 14  		141547 		-1.2494		0.894243
	4 to 13  		142246 		 1.1609		0.122835
	3 to 12  		141749 		-0.5529		0.709821
	2 to 11  		141888 		-0.0736		0.529316
	1 to 10  		142209 		 1.0333		0.150721
	-----------------------------------------------------------------

	|------------------------------------------------------------ |
	|    OQSO means Overlapping-Quadruples-Sparse-Occupancy       |
	|  The test OQSO is similar, except that it considers 4-letter|
	|words from an alphabet of 32 letters, each letter determined |
	|by a designated string of 5 consecutive bits from the test   |
	|file, elements of which are assumed 32-bit random integers.  |
	|The mean number of missing words in a sequence of 2^21 four- |
	|letter words,  (2^21+3 "keystrokes"), is again 141909, with  |
	|sigma = 295.  The mean is based on theory; sigma comes from  |
	|extensive simulation.                                        |
	|------------------------------------------------------------ |

			   OQSO test for file tranut.bin

	Bits used	No. missing words	z-score		p-value
	28 to 32  		141739 		-0.5774		0.718162
	27 to 31  		141742 		-0.5672		0.714718
	26 to 30  		141521 		-1.3164		0.905976
	25 to 29  		141995 		 0.2904		0.385752
	24 to 28  		141948 		 0.1311		0.447854
	23 to 27  		141627 		-0.9571		0.830729
	22 to 26  		142063 		 0.5209		0.301213
	21 to 25  		141830 		-0.2689		0.606002
	20 to 24  		141830 		-0.2689		0.606002
	19 to 23  		142573 		 2.2497		0.012233
	18 to 22  		141571 		-1.1469		0.874285
	17 to 21  		142015 		 0.3582		0.360095
	16 to 20  		141950 		 0.1379		0.445174
	15 to 19  		142427 		 1.7548		0.039646
	14 to 18  		142005 		 0.3243		0.372853
	13 to 17  		142039 		 0.4396		0.330128
	12 to 16  		142087 		 0.6023		0.273497
	11 to 15  		141902 		-0.0248		0.509912
	10 to 14  		142215 		 1.0362		0.150062
	9 to 13  		142039 		 0.4396		0.330128
	8 to 12  		142019 		 0.3718		0.355035
	7 to 11  		141630 		-0.9469		0.828150
	6 to 10  		141757 		-0.5164		0.697203
	5 to 9  		142098 		 0.6396		0.261230
	4 to 8  		141497 		-1.3977		0.918903
	3 to 7  		141880 		-0.0994		0.539599
	2 to 6  		141714 		-0.6621		0.746058
	1 to 5  		141860 		-0.1672		0.566402
	-----------------------------------------------------------------

	|------------------------------------------------------------ |
	|    The DNA test considers an alphabet of 4 letters: C,G,A,T,|
	|determined by two designated bits in the sequence of random  |
	|integers being tested.  It considers 10-letter words, so that|
	|as in OPSO and OQSO, there are 2^20 possible words, and the  |
	|mean number of missing words from a string of 2^21  (over-   |
	|lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.  |
	|The standard deviation sigma=339 was determined as for OQSO  |
	|by simulation.  (Sigma for OPSO, 290, is the true value (to  |
	|three places), not determined by simulation.                 |
	|------------------------------------------------------------ |

			   DNA test for file tranut.bin

	Bits used	No. missing words	z-score		p-value
	31 to 32  		141341 		-1.6765		0.953179
	30 to 31  		142250 		 1.0049		0.157466
	29 to 30  		141620 		-0.8535		0.803304
	28 to 29  		141700 		-0.6175		0.731545
	27 to 28  		142095 		 0.5477		0.291949
	26 to 27  		142249 		 1.0020		0.158177
	25 to 26  		141598 		-0.9184		0.820789
	24 to 25  		141765 		-0.4258		0.664856
	23 to 24  		141937 		 0.0816		0.467473
	22 to 23  		142333 		 1.2498		0.105693
	21 to 22  		142089 		 0.5300		0.298056
	20 to 21  		141834 		-0.2222		0.587926
	19 to 20  		142220 		 0.9164		0.179720
	18 to 19  		141832 		-0.2281		0.590220
	17 to 18  		141927 		 0.0521		0.479215
	16 to 17  		142423 		 1.5153		0.064854
	15 to 16  		142069 		 0.4710		0.318819
	14 to 15  		141911 		 0.0049		0.498035
	13 to 14  		142420 		 1.5064		0.065982
	12 to 13  		142209 		 0.8840		0.188353
	11 to 12  		142475 		 1.6686		0.047594
	10 to 11  		141916 		 0.0197		0.492151
	9 to 10  		142271 		 1.0669		0.143015
	8 to 9  		141800 		-0.3225		0.626466
	7 to 8  		141713 		-0.5791		0.718754
	6 to 7  		142196 		 0.8456		0.198878
	5 to 6  		141961 		 0.1524		0.439428
	4 to 5  		142531 		 1.8338		0.033339
	3 to 4  		141476 		-1.2783		0.899421
	2 to 3  		141907 		-0.0069		0.502742
	1 to 2  		141785 		-0.3668		0.643099
	-----------------------------------------------------------------

	|-------------------------------------------------------------|
	|    This is the COUNT-THE-1''s TEST on a stream of bytes.    |
	|Consider the file under test as a stream of bytes (four per  |
	|32 bit integer).  Each byte can contain from 0 to 8 1''s,    |
	|with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let |
	|the stream of bytes provide a string of overlapping  5-letter|
	|words, each "letter" taking values A,B,C,D,E. The letters are|
	|determined by the number of 1''s in a byte: 0,1,or 2 yield A,|
	|3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus|
	|we have a monkey at a typewriter hitting five keys with vari-|
	|ous probabilities (37,56,70,56,37 over 256).  There are 5^5  |
	|possible 5-letter words, and from a string of 256,000 (over- |
	|lapping) 5-letter words, counts are made on the frequencies  |
	|for each word.   The quadratic form in the weak inverse of   |
	|the covariance matrix of the cell counts provides a chisquare|
	|test: Q5-Q4, the difference of the naive Pearson sums of     |
	|(OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.   |
	|-------------------------------------------------------------|

		Test result for the byte stream from tranut.bin
	  (Degrees of freedom: 5^4-5^3=2500; sample size: 2560000)

			chisquare	z-score		p-value
			2529.38		 0.416		0.338878

	|-------------------------------------------------------------|
	|    This is the COUNT-THE-1''s TEST for specific bytes.      |
	|Consider the file under test as a stream of 32-bit integers. |
	|From each integer, a specific byte is chosen , say the left- |
	|most: bits 1 to 8. Each byte can contain from 0 to 8 1''s,   |
	|with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let  |
	|the specified bytes from successive integers provide a string|
	|of (overlapping) 5-letter words, each "letter" taking values |
	|A,B,C,D,E. The letters are determined  by the number of 1''s,|
	|in that byte: 0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D, |
	|and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter |
	|hitting five keys with with various probabilities: 37,56,70, |
	|56,37 over 256. There are 5^5 possible 5-letter words, and   |
	|from a string of 256,000 (overlapping) 5-letter words, counts|
	|are made on the frequencies for each word. The quadratic form|
	|in the weak inverse of the covariance matrix of the cell     |
	|counts provides a chisquare test: Q5-Q4, the difference of   |
	|the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-  |
	|and 4-letter cell  counts.                                   |
	|-------------------------------------------------------------|

		Test results for specific bytes from tranut.bin
	  (Degrees of freedom: 5^4-5^3=2500; sample size: 256000)

	bits used	chisquare	z-score		p-value
	1 to 8  	2512.79		 0.181		0.428245
	2 to 9  	2451.08		-0.692		0.755481
	3 to 10  	2572.33		 1.023		0.153171
	4 to 11  	2464.83		-0.497		0.690515
	5 to 12  	2370.66		-1.829		0.966316
	6 to 13  	2685.77		 2.627		0.004305
	7 to 14  	2462.39		-0.532		0.702606
	8 to 15  	2521.47		 0.304		0.380697
	9 to 16  	2502.05		 0.029		0.488448
	10 to 17  	2455.94		-0.623		0.733393
	11 to 18  	2610.79		 1.567		0.058588
	12 to 19  	2597.72		 1.382		0.083497
	13 to 20  	2544.05		 0.623		0.266653
	14 to 21  	2503.40		 0.048		0.480827
	15 to 22  	2597.59		 1.380		0.083775
	16 to 23  	2428.54		-1.011		0.843901
	17 to 24  	2532.20		 0.455		0.324396
	18 to 25  	2458.08		-0.593		0.723356
	19 to 26  	2534.63		 0.490		0.312180
	20 to 27  	2512.18		 0.172		0.431642
	21 to 28  	2493.12		-0.097		0.538760
	22 to 29  	2479.58		-0.289		0.613649
	23 to 30  	2417.45		-1.167		0.878494
	24 to 31  	2544.39		 0.628		0.265097
	25 to 32  	2408.48		-1.294		0.902221
	|-------------------------------------------------------------|
	|              THIS IS A PARKING LOT TEST                     |
	|In a square of side 100, randomly "park" a car---a circle of |
	|radius 1.   Then try to park a 2nd, a 3rd, and so on, each   |
	|time parking "by ear".  That is, if an attempt to park a car |
	|causes a crash with one already parked, try again at a new   |
	|random location. (To avoid path problems, consider parking   |
	|helicopters rather than cars.)   Each attempt leads to either|
	|a crash or a success, the latter followed by an increment to |
	|the list of cars already parked. If we plot n: the number of |
	|attempts, versus k: the number successfully parked, we get a |
	|curve that should be similar to those provided by a perfect  |
	|random number generator.  Theory for the behavior of such a  |
	|random curve seems beyond reach, and as graphics displays are|
	|not available for this battery of tests, a simple characteriz|
	|ation of the random experiment is used: k, the number of cars|
	|successfully parked after n=12,000 attempts. Simulation shows|
	|that k should average 3523 with sigma 21.9 and is very close |
	|to normally distributed.  Thus (k-3523)/21.9 should be a st- |
	|andard normal variable, which, converted to a uniform varia- |
	|ble, provides input to a KSTEST based on a sample of 10.     |
	|-------------------------------------------------------------|

		CDPARK: result of 10 tests on file tranut.bin
	  (Of 12000 tries, the average no. of successes should be 
	   3523.0 with sigma=21.9)

	   No. succeses		z-score		p-value
		3512		-0.5023		0.692266
		3504		-0.8676		0.807188
		3509		-0.6393		0.738676
		3515		-0.3653		0.642555
		3503		-0.9132		0.819442
		3498		-1.1416		0.873180
		3585		 2.8311		0.002320
		3547		 1.0959		0.136563
		3530		 0.3196		0.374623
		3539		 0.7306		0.232514
	  Square side=100, avg. no. parked=3524.20 sample std.=25.45
	     p-value of the KSTEST for those 10 p-values: 0.088996


	|-------------------------------------------------------------|
	|              THE MINIMUM DISTANCE TEST                      |
	|It does this 100 times:  choose n=8000 random points in a    |
	|square of side 10000.  Find d, the minimum distance between  |
	|the (n^2-n)/2 pairs of points.  If the points are truly inde-|
	|pendent uniform, then d^2, the square of the minimum distance|
	|should be (very close to) exponentially distributed with mean|
	|.995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and |
	|a KSTEST on the resulting 100 values serves as a test of uni-|
	|formity for random points in the square. Test numbers=0 mod 5|
	|are printed but the KSTEST is based on the full set of 100   |
	|random choices of 8000 points in the 10000x10000 square.     |
	|-------------------------------------------------------------|

		This is the MINIMUM DISTANCE test for file tranut.bin

	Sample no.	 d^2		 mean		equiv uni
	   5		4.2505		8.7870		0.986045
	   10		1.5803		4.8770		0.795717
	   15		0.1256		3.3418		0.118555
	   20		1.3188		2.8517		0.734300
	   25		0.0300		2.4162		0.029669
	   30		0.6239		2.1796		0.465807
	   35		1.0227		2.0715		0.642211
	   40		1.9559		2.0121		0.859949
	   45		0.9531		1.8391		0.616299
	   50		2.4479		1.8076		0.914579
	   55		1.5083		1.6888		0.780394
	   60		0.4534		1.6153		0.365978
	   65		0.2900		1.5669		0.252831
	   70		2.2204		1.5217		0.892644
	   75		2.6229		1.4677		0.928357
	   80		1.5737		1.4542		0.794353
	   85		1.3953		1.4361		0.753975
	   90		0.0136		1.4168		0.013548
	   95		1.6895		1.3940		0.816950
	   100		0.0073		1.3649		0.007347
	--------------------------------------------------------------
	Result of KS test on 100 transformed mindist^2's: p-value=0.842988


				NOTE

	Most of the tests in DIEHARD return a p-value, which
	should be uniform on [0,1) if the input file contains truly
	independent random bits.   Those p-values are obtained by
	p=1-F(X), where F is the assumed distribution of the sample
	random variable X---often normal. But that assumed F is often just
	an asymptotic approximation, for which the fit will be worst
	in the tails. Thus you should not be surprised with  occasion-
	al p-values near 0 or 1, such as .0012 or .9983. When a bit
	stream really FAILS BIG, you will get p`s of 0 or 1 to six 
	or more places.  By all means, do not, as a Statistician 
	might, think that a p < .025 or p> .975 means that the RNG
	has "failed the test at the .05 level".  Such p`s happen
	among the hundreds that DIEHARD produces, even with good RNGs.
	 So keep in mind that "p happens"

	Enter the name of the file to be tested.
	This must be a form="unformatted",access="direct" binary
	file of about 10-12 million bytes. Enter file name: 


		HERE ARE YOUR CHOICES:

		1   Birthday Spacings
		2   Overlapping Permutations
		3   Ranks of 31x31 and 32x32 matrices
		4   Ranks of 6x8 Matrices
		5   Monkey Tests on 20-bit Words
		6   Monkey Tests OPSO,OQSO,DNA
		7   Count the 1`s in a Stream of Bytes
		8   Count the 1`s in Specific Bytes
		9   Parking Lot Test
		10  Minimum Distance Test
		11  Random Spheres Test
		12  The Sqeeze Test
		13  Overlapping Sums Test
		14  Runs Test
		15  The Craps Test
		16  All of the above

	To choose any particular tests, enter corresponding numbers.
	Enter 16 for all tests. If you want to perform all but a few
	tests, enter corresponding numbers preceded by "-" sign.
	Tests are executed in the order they are entered.

	Enter your choices.

	|-------------------------------------------------------------|
	|             THE 3DSPHERES TEST                              |
	|Choose  4000 random points in a cube of edge 1000.  At each  |
	|point, center a sphere large enough to reach the next closest|
	|point. Then the volume of the smallest such sphere is (very  |
	|close to) exponentially distributed with mean 120pi/3.  Thus |
	|the radius cubed is exponential with mean 30. (The mean is   |
	|obtained by extensive simulation).  The 3DSPHERES test gener-|
	|ates 4000 such spheres 20 times.  Each min radius cubed leads|
	|to a uniform variable by means of 1-exp(-r^3/30.), then a    |
	| KSTEST is done on the 20 p-values.                          |
	|-------------------------------------------------------------|

		    The 3DSPHERES test for file tranut.bin

		sample no	r^3		equiv. uni.
		   1		59.706		0.863333
		   2		21.887		0.517884
		   3		1.185		0.038745
		   4		1.844		0.059608
		   5		0.255		0.008458
		   6		58.912		0.859667
		   7		6.887		0.205112
		   8		39.137		0.728709
		   9		17.018		0.432928
		   10		76.268		0.921313
		   11		0.145		0.004809
		   12		118.649		0.980841
		   13		51.144		0.818192
		   14		72.624		0.911149
		   15		2.562		0.081865
		   16		28.116		0.608272
		   17		15.172		0.396936
		   18		13.595		0.364383
		   19		4.841		0.149026
		   20		43.399		0.764637
	--------------------------------------------------------------
		p-value for KS test on those 20 p-values: 0.271306


	|-------------------------------------------------------------|
	|                 This is the SQUEEZE test                    |
	| Random integers are floated to get uniforms on [0,1). Start-|
	| ing with k=2^31=2147483647, the test finds j, the number of |
	| iterations necessary to reduce k to 1, using the reduction  |
	| k=ceiling(k*U), with U provided by floating integers from   |
	| the file being tested.  Such j''s are found 100,000 times,  |
	| then counts for the number of times j was <=6,7,...,47,>=48 |
	| are used to provide a chi-square test for cell frequencies. |
	|-------------------------------------------------------------|

			RESULTS OF SQUEEZE TEST FOR tranut.bin

		    Table of standardized frequency counts
		(obs-exp)^2/exp  for j=(1,..,6), 7,...,47,(48,...)
		-1.5  	 0.1  	 0.3  	 0.0  	-0.1  	 0.9  
		 2.0  	 0.6  	 1.2  	-0.5  	 0.6  	-0.9  
		 0.5  	-1.1  	 2.2  	-1.1  	 0.9  	-1.6  
		 0.3  	-0.4  	 0.1  	-0.8  	 0.4  	 0.4  
		 0.0  	 1.7  	-2.5  	-0.5  	 0.8  	-0.4  
		-1.2  	-1.7  	 1.2  	 2.0  	-2.2  	 1.9  
		-1.2  	 1.1  	 0.5  	 1.0  	 0.1  	 0.0  
		-1.1  
		Chi-square with 42 degrees of freedom:54.923305
		z-score=1.410048, p-value=0.087233
	_____________________________________________________________


	|-------------------------------------------------------------|
	|    This is the RUNS test.  It counts runs up, and runs down,|
	|in a sequence of uniform [0,1) variables, obtained by float- |
	|ing the 32-bit integers in the specified file. This example  |
	|shows how runs are counted: .123,.357,.789,.425,.224,.416,.95|
	|contains an up-run of length 3, a down-run of length 2 and an|
	|up-run of (at least) 2, depending on the next values.  The   |
	|covariance matrices for the runs-up and runs-down are well   |
	|known, leading to chisquare tests for quadratic forms in the |
	|weak inverses of the covariance matrices.  Runs are counted  |
	|for sequences of length 10,000.  This is done ten times. Then|
	|another three sets of ten.                                   |
	|-------------------------------------------------------------|

			The RUNS test for file tranut.bin
		(Up and down runs in a sequence of 10000 numbers)
				Set 1
		 runs up; ks test for 10 p's: 0.710052
		 runs down; ks test for 10 p's: 0.786737
				Set 2
		 runs up; ks test for 10 p's: 0.569666
		 runs down; ks test for 10 p's: 0.168585

	|-------------------------------------------------------------|
	|This the CRAPS TEST.  It plays 200,000 games of craps, counts|
	|the number of wins and the number of throws necessary to end |
	|each game.  The number of wins should be (very close to) a   |
	|normal with mean 200000p and variance 200000p(1-p), and      |
	|p=244/495.  Throws necessary to complete the game can vary   |
	|from 1 to infinity, but counts for all>21 are lumped with 21.|
	|A chi-square test is made on the no.-of-throws cell counts.  |
	|Each 32-bit integer from the test file provides the value for|
	|the throw of a die, by floating to [0,1), multiplying by 6   |
	|and taking 1 plus the integer part of the result.            |
	|-------------------------------------------------------------|

		RESULTS OF CRAPS TEST FOR tranut.bin 
	No. of wins:  Observed	Expected
	                 98636        98585.858586
		z-score= 0.224, pvalue=0.41128

	Analysis of Throws-per-Game:

	Throws	Observed	Expected	Chisq	 Sum of (O-E)^2/E
	1	66889		66666.7		0.741		0.741
	2	37976		37654.3		2.748		3.490
	3	26452		26954.7		9.376		12.866
	4	19279		19313.5		0.061		12.928
	5	13795		13851.4		0.230		13.157
	6	9812		9943.5		1.740		14.898
	7	7187		7145.0		0.247		15.144
	8	5154		5139.1		0.043		15.187
	9	3683		3699.9		0.077		15.264
	10	2697		2666.3		0.354		15.618
	11	1980		1923.3		1.670		17.288
	12	1464		1388.7		4.079		21.366
	13	1018		1003.7		0.203		21.570
	14	695		726.1		1.335		22.905
	15	522		525.8		0.028		22.933
	16	401		381.2		1.034		23.967
	17	255		276.5		1.678		25.644
	18	216		200.8		1.146		26.790
	19	133		146.0		1.155		27.945
	20	100		106.2		0.364		28.309
	21	292		287.1		0.083		28.392

	Chisq=  28.39 for 20 degrees of freedom, p= 0.10044

		SUMMARY of craptest on tranut.bin
	 p-value for no. of wins: 0.411277
	 p-value for throws/game: 0.100440
	_____________________________________________________________

